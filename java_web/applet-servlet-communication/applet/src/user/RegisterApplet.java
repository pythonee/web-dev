/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RegisterApplet.java
 *
 * Created on 09-Dec-2010, 12:11:02
 */

package user;

import java.applet.AppletContext;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author pythonee
 */
public class RegisterApplet extends javax.swing.JApplet {
     final static Logger log = Logger.getLogger("RegisterApplet");
     static int[] monthWith_31_Days = {1,0,3,0,5,0,7,8,0,10,0,12};
     boolean commitable = true;
    /** Initializes the applet RegisterApplet */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            log.severe(ex.getMessage());
        }
        
        
        for (int i = 1905; i <= 2010; i++) {
            yearBOX.addItem(i);
        }

        for (int i = 1; i <= 31; i++) {
            dayBOX.addItem(i);
        }

        setSize(924, 901);
        notConnectDialog.setSize(537, 110);
        addSuccessDialog.setSize(400, 300);

        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screen = tk.getScreenSize();
        int width = screen.width;
        int height = screen.height;

        int ncdlgWidth = notConnectDialog.getWidth();
        int ncdlgHeight = notConnectDialog.getHeight();

        int asdlgWidth = addSuccessDialog.getWidth();
        int asdlgHeight = addSuccessDialog.getHeight();

        notConnectDialog.setLocation((width - ncdlgWidth) / 2, (height - ncdlgHeight) / 2);
        addSuccessDialog.setLocation((width - asdlgWidth) / 2, (height - asdlgHeight) / 2);
        commitable = true;
        addSuccessDialog.setVisible(false);
        notConnectDialog.setVisible(false);

        passwdTXT.enableInputMethods(true);
        rePasswordTXT.enableInputMethods(true);
    }

    @Override
    public void start() {
        addSuccessDialog.dispose();
        notConnectDialog.dispose();
    }


    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addSuccessDialog = new javax.swing.JDialog();
        congratulateLabel = new javax.swing.JLabel();
        actionChooseLabel = new javax.swing.JLabel();
        ucenterLabel = new javax.swing.JLabel();
        openAccountLabel = new javax.swing.JLabel();
        indexLinkLabel = new javax.swing.JLabel();
        notConnectDialog = new javax.swing.JDialog();
        notConnectMSG = new javax.swing.JLabel();
        signupBTN = new javax.swing.JButton();
        usernameTXT = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        resetBTN = new javax.swing.JButton();
        emailLabel = new javax.swing.JLabel();
        formnameLabel = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        emailTXT = new javax.swing.JTextField();
        passwdTXT = new javax.swing.JPasswordField();
        rePasswordLabel = new javax.swing.JLabel();
        rePasswordTXT = new javax.swing.JPasswordField();
        availableBTN = new javax.swing.JButton();
        alreadyAccountLabel = new javax.swing.JLabel();
        loginLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTXT = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTXT = new javax.swing.JTextField();
        yearBOX = new javax.swing.JComboBox();
        monthBOX = new javax.swing.JComboBox();
        dayBOX = new javax.swing.JComboBox();
        sexLabel = new javax.swing.JLabel();
        birthdayLabel = new javax.swing.JLabel();
        firstNameStar = new javax.swing.JLabel();
        firstNameStar.setVisible(false);
        lastNameStar = new javax.swing.JLabel();
        lastNameStar.setVisible(false);
        sexStar = new javax.swing.JLabel();
        sexStar.setVisible(false);
        yearStar = new javax.swing.JLabel();
        yearStar.setVisible(false);
        usernameStar = new javax.swing.JLabel();
        usernameStar.setVisible(false);
        passwordStar = new javax.swing.JLabel();
        passwordStar.setVisible(false);
        rePasswordStar = new javax.swing.JLabel();
        rePasswordStar.setVisible(false);
        emailStar = new javax.swing.JLabel();
        emailStar.setVisible(false);
        monthStar = new javax.swing.JLabel();
        monthStar.setVisible(false);
        dayStar = new javax.swing.JLabel();
        dayStar.setVisible(false);
        firstNameErrLabel = new javax.swing.JLabel();
        firstNameErrLabel.setVisible(false);
        lastNameErrLabel = new javax.swing.JLabel();
        lastNameErrLabel.setVisible(false);
        sexErrLabel = new javax.swing.JLabel();
        sexErrLabel.setVisible(false);
        birthdayErrLabel = new javax.swing.JLabel();
        birthdayErrLabel.setVisible(false);
        usernameErrLabel = new javax.swing.JLabel();
        usernameErrLabel.setVisible(false);
        passwordErrLabel = new javax.swing.JLabel();
        passwordErrLabel.setVisible(false);
        emailErrLabel = new javax.swing.JLabel();
        emailErrLabel.setVisible(false);
        rePasswordErrLabel = new javax.swing.JLabel();
        rePasswordErrLabel.setVisible(false);
        sexBox = new javax.swing.JComboBox();
        availableSuccessLabel = new javax.swing.JLabel();
        availableSuccessLabel.setVisible(false);

        addSuccessDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addSuccessDialog.setTitle("Sign up Success");
        addSuccessDialog.setIconImage(null);
        addSuccessDialog.setIconImages(null);
        addSuccessDialog.setMinimumSize(new java.awt.Dimension(200, 100));
        addSuccessDialog.setModal(true);
        addSuccessDialog.setResizable(false);
        addSuccessDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                addSuccessDialogWindowClosing(evt);
            }
        });

        congratulateLabel.setText("Congratulate. You have created an accout");

        actionChooseLabel.setText("Now, You can go:");

        ucenterLabel.setForeground(new java.awt.Color(0, 0, 255));
        ucenterLabel.setText("user center");
        ucenterLabel.setBorder(null);
        ucenterLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ucenterLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ucenterLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ucenterLabelMouseExited(evt);
            }
        });

        openAccountLabel.setForeground(new java.awt.Color(0, 0, 255));
        openAccountLabel.setText("open a e-bank account");
        openAccountLabel.setBorder(null);
        openAccountLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        openAccountLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openAccountLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                openAccountLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                openAccountLabelMouseExited(evt);
            }
        });

        indexLinkLabel.setForeground(new java.awt.Color(0, 0, 255));
        indexLinkLabel.setText("go back to index");
        indexLinkLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                indexLinkLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                indexLinkLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                indexLinkLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout addSuccessDialogLayout = new javax.swing.GroupLayout(addSuccessDialog.getContentPane());
        addSuccessDialog.getContentPane().setLayout(addSuccessDialogLayout);
        addSuccessDialogLayout.setHorizontalGroup(
            addSuccessDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSuccessDialogLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(congratulateLabel))
            .addGroup(addSuccessDialogLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(actionChooseLabel))
            .addGroup(addSuccessDialogLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(ucenterLabel))
            .addGroup(addSuccessDialogLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(addSuccessDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(indexLinkLabel)
                    .addComponent(openAccountLabel))
                .addGap(189, 189, 189))
        );
        addSuccessDialogLayout.setVerticalGroup(
            addSuccessDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSuccessDialogLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(congratulateLabel)
                .addGap(18, 18, 18)
                .addComponent(actionChooseLabel)
                .addGap(37, 37, 37)
                .addComponent(ucenterLabel)
                .addGap(33, 33, 33)
                .addComponent(openAccountLabel)
                .addGap(33, 33, 33)
                .addComponent(indexLinkLabel)
                .addGap(61, 61, 61))
        );

        notConnectDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        notConnectDialog.setTitle("Connect Error");
        notConnectDialog.setIconImage(null);
        notConnectDialog.setIconImages(null);
        notConnectDialog.setModal(true);
        notConnectDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                notConnectDialogWindowClosing(evt);
            }
        });
        notConnectDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        notConnectMSG.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 17));
        notConnectMSG.setForeground(new java.awt.Color(242, 21, 15));
        notConnectMSG.setText("Unable to reach server. Please check your Internet connection.");
        notConnectDialog.getContentPane().add(notConnectMSG, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        signupBTN.setText("Sign up");
        signupBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupBTNActionPerformed(evt);
            }
        });
        getContentPane().add(signupBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 750, -1, -1));

        usernameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTXTFocusLost(evt);
            }
        });
        getContentPane().add(usernameTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 410, 356, -1));

        usernameLabel.setText("Desired Login Name:");
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, -1, -1));

        passwordLabel.setText("choose a password:");
        getContentPane().add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 550, -1, -1));

        resetBTN.setText("Reset");
        resetBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBTNActionPerformed(evt);
            }
        });
        getContentPane().add(resetBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 750, -1, -1));

        emailLabel.setText("e-mail:");
        getContentPane().add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 700, -1, -1));

        formnameLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 1, 15));
        formnameLabel.setText("Create an Account");
        getContentPane().add(formnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 12, -1, -1));

        logoLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 1, 15));
        logoLabel.setText("E-Banking");
        getContentPane().add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(801, 12, -1, -1));

        emailTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailTXTFocusLost(evt);
            }
        });
        getContentPane().add(emailTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 700, 356, -1));

        passwdTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwdTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwdTXTFocusLost(evt);
            }
        });
        getContentPane().add(passwdTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, 356, -1));

        rePasswordLabel.setText("Re-enter password:");
        getContentPane().add(rePasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 630, -1, -1));

        rePasswordTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rePasswordTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rePasswordTXTFocusLost(evt);
            }
        });
        getContentPane().add(rePasswordTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 630, 356, -1));

        availableBTN.setText("check availability");
        availableBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableBTNActionPerformed(evt);
            }
        });
        getContentPane().add(availableBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 480, -1, -1));

        alreadyAccountLabel.setText("if you already have accout, you can");
        getContentPane().add(alreadyAccountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, -1, -1));

        loginLabel.setForeground(new java.awt.Color(0, 0, 255));
        loginLabel.setText("sign in here.");
        loginLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginLabelMouseExited(evt);
            }
        });
        getContentPane().add(loginLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 40, -1, -1));

        firstNameLabel.setText("First Name:");
        getContentPane().add(firstNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, -1, -1));

        firstNameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstNameTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstNameTXTFocusLost(evt);
            }
        });
        getContentPane().add(firstNameTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 356, -1));

        lastNameLabel.setText("Last Name:");
        getContentPane().add(lastNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, -1, -1));

        lastNameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lastNameTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastNameTXTFocusLost(evt);
            }
        });
        getContentPane().add(lastNameTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 356, -1));

        yearBOX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year" }));
        yearBOX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yearBOXItemStateChanged(evt);
            }
        });
        yearBOX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearBOXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearBOXFocusLost(evt);
            }
        });
        getContentPane().add(yearBOX, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, -1, -1));

        monthBOX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthBOX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                monthBOXItemStateChanged(evt);
            }
        });
        monthBOX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthBOXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                monthBOXFocusLost(evt);
            }
        });
        getContentPane().add(monthBOX, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, -1, -1));

        dayBOX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day" }));
        dayBOX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dayBOXItemStateChanged(evt);
            }
        });
        dayBOX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayBOXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dayBOXFocusLost(evt);
            }
        });
        getContentPane().add(dayBOX, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 330, -1, -1));

        sexLabel.setText("I am:");
        getContentPane().add(sexLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 253, -1, -1));

        birthdayLabel.setText("Birthday:");
        getContentPane().add(birthdayLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 333, -1, -1));

        firstNameStar.setForeground(new java.awt.Color(255, 0, 0));
        firstNameStar.setText("*");
        getContentPane().add(firstNameStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 120, -1, -1));

        lastNameStar.setForeground(new java.awt.Color(255, 0, 0));
        lastNameStar.setText("*");
        getContentPane().add(lastNameStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 190, -1, -1));

        sexStar.setForeground(new java.awt.Color(255, 0, 0));
        sexStar.setText("*");
        getContentPane().add(sexStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 260, -1, -1));

        yearStar.setForeground(new java.awt.Color(255, 0, 0));
        yearStar.setText("*");
        getContentPane().add(yearStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 330, -1, -1));

        usernameStar.setForeground(new java.awt.Color(255, 0, 0));
        usernameStar.setText("*");
        getContentPane().add(usernameStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 410, -1, -1));

        passwordStar.setForeground(new java.awt.Color(255, 0, 0));
        passwordStar.setText("*");
        getContentPane().add(passwordStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 550, -1, -1));

        rePasswordStar.setForeground(new java.awt.Color(255, 0, 0));
        rePasswordStar.setText("*");
        getContentPane().add(rePasswordStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 630, -1, -1));

        emailStar.setForeground(new java.awt.Color(255, 0, 0));
        emailStar.setText("*");
        getContentPane().add(emailStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 700, -1, -1));

        monthStar.setForeground(new java.awt.Color(255, 0, 0));
        monthStar.setText("*");
        getContentPane().add(monthStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 330, -1, -1));

        dayStar.setForeground(new java.awt.Color(255, 0, 0));
        dayStar.setText("*");
        getContentPane().add(dayStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 330, -1, -1));

        firstNameErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        firstNameErrLabel.setText("first name");
        getContentPane().add(firstNameErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, -1, -1));

        lastNameErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        lastNameErrLabel.setText("last name");
        getContentPane().add(lastNameErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, -1, -1));

        sexErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        sexErrLabel.setText("set ");
        getContentPane().add(sexErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, -1, -1));

        birthdayErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        birthdayErrLabel.setText("birthday");
        getContentPane().add(birthdayErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 360, -1, -1));

        usernameErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        usernameErrLabel.setText("user name");
        getContentPane().add(usernameErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, -1, -1));

        passwordErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        passwordErrLabel.setText("password");
        getContentPane().add(passwordErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 580, -1, -1));

        emailErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        emailErrLabel.setText("e-mail");
        getContentPane().add(emailErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 730, -1, -1));

        rePasswordErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        rePasswordErrLabel.setText("re-password");
        getContentPane().add(rePasswordErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 660, -1, -1));

        sexBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sex", "Male", "Female" }));
        sexBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sexBoxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sexBoxFocusLost(evt);
            }
        });
        getContentPane().add(sexBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, -1, -1));

        availableSuccessLabel.setForeground(new java.awt.Color(0, 255, 0));
        availableSuccessLabel.setText("jLabel2");
        getContentPane().add(availableSuccessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
   
    private void checkUsername() {
        String username = usernameTXT.getText();

        if (username.length() == 0) {
            availableSuccessLabel.setVisible(false);
            usernameErrLabel.setVisible(true);
            usernameStar.setVisible(true);
            usernameErrLabel.setText("Required field cannot be left blank");
            usernameStar.setVisible(true);
            commitable = false;
        }

        if (username.length() > 16 || username.length() < 6) {
            availableSuccessLabel.setVisible(false);
            usernameErrLabel.setVisible(true);
            usernameErrLabel.setText("Sorry, your username must be between 6 and 16 characters long");
            commitable = false;
        }

        if (username.length() > 0) {
            String regexStr = "\\w+";

            Pattern regex = Pattern.compile(regexStr);

            Matcher matcher = regex.matcher(username);

            if (!matcher.matches()) {
                availableSuccessLabel.setVisible(false);
                usernameErrLabel.setVisible(true);
                usernameErrLabel.setText("Sorry, only letters (a-z), numbers (0-9), and underline (_) are allowed");
                commitable = false;
            }
        }
        log.info("check username");
    }

    private void checkFirstName(){
          String firstName = firstNameTXT.getText();

          if (firstName.length() == 0) {
              firstNameErrLabel.setVisible(true);
              firstNameStar.setVisible(true);
              firstNameErrLabel.setText("Required field cannot be left blank");
              commitable = false;
          }

          log.info("check FirstName");
    }

    private void checkLastName(){
         String lastName = lastNameTXT.getText();

         if (lastName.length() == 0) {
            lastNameErrLabel.setVisible(true);
            lastNameStar.setVisible(true);
            lastNameErrLabel.setText("Required field cannot be left blank");
            commitable = false;
         }

         log.info("check Lastname");
    }

    private void  checkEmail(){
        String email = emailTXT.getText();

        if (email.length() == 0) {
            emailErrLabel.setVisible(true);
            emailStar.setVisible(true);
            emailErrLabel.setText("Required field cannot be left blank");
            commitable = false;
        } else if (email.length() > 0) {
            String emailCheck = "\\w+(\\.\\w+)*@\\w+(\\.\\w+)+";

            Pattern regex = Pattern.compile(emailCheck);
            Matcher matcher = regex.matcher(email);
            if (!matcher.matches()) {
                emailErrLabel.setVisible(true);
                emailErrLabel.setText("Please enter a valid email address");
                commitable = false;
            }
        }

        log.info("check email address");
    }

    private void  checkPassword(){
        String password = new String(passwdTXT.getPassword());

        if (password.length() == 0) {
            passwordErrLabel.setVisible(true);
            passwordStar.setVisible(true);
            passwordErrLabel.setText("Required field cannot be left blank");
            commitable = false;
        }

        if (password.length() < 8) {
            passwordErrLabel.setVisible(true);
            passwordErrLabel.setText("Must have at least 8 characters");
            commitable = false;
        }

        log.info("check password");
    }

    private void  checkRePassword(){
        String rePassword = new String(rePasswordTXT.getPassword());
        String password = new String(passwdTXT.getPassword());
        
        if (rePassword.length() == 0) {
            rePasswordStar.setVisible(true);
            rePasswordErrLabel.setVisible(true);
            rePasswordErrLabel.setText("Required field cannot be left blank");
            commitable = false;
        }

        if (!password.equals(rePassword)) {
            rePasswordErrLabel.setVisible(true);
            rePasswordErrLabel.setText("Passwords do not match");
            commitable = false;
        }

        log.info("check re-password");
    }

    private void checkSex(){
        if (sexBox.getSelectedIndex() == 0) {
            sexErrLabel.setVisible(true);
            sexStar.setVisible(true);
            sexErrLabel.setText("Please select either Male or Female.");
            log.info("Please select either Male or Female.");
            commitable = false;
        }

        log.info("check sex choose");
    }

    private void  checkYear(){
        if (yearBOX.getSelectedIndex() == 0) {
            yearStar.setVisible(true);
            birthdayErrLabel.setVisible(true);
            birthdayErrLabel.setText("You must indicate your full birthday to register.");
            commitable = false;
        }

        log.info("check year choose");
    }

    private void  checkMonth(){
        if (monthBOX.getSelectedIndex() == 0) {
            monthStar.setVisible(true);
            birthdayErrLabel.setVisible(true);
            birthdayErrLabel.setText("You must indicate your full birthday to register.");
            commitable = false;
        }
        
        log.info("check month choose");
    }

    private void checkDay(){
        if (dayBOX.getSelectedIndex() == 0) {
            dayStar.setVisible(true);
            birthdayErrLabel.setVisible(true);
            birthdayErrLabel.setText("You must indicate your full birthday to register.");
            commitable = false;
        }

        log.info("check day choose");
    }

    private void cacasdeCal(){
        if (monthBOX.getSelectedIndex() == 2) {
            if (yearBOX.getSelectedIndex() % 4 == 0) {
                if (dayBOX.getSelectedIndex() > 29) {
                    dayBOX.setSelectedIndex(0);
                }
                if (dayBOX.getItemCount() > 30) {
                    for(int i=30; i < dayBOX.getItemCount(); i++) {
                        dayBOX.removeItemAt(i);
                    }
                }
                else if(dayBOX.getItemCount() < 30){
                    for(int i = dayBOX.getItemCount(); i <= 29; i++){
                        dayBOX.addItem(i);
                    }
                }
                log.info("February with 29 days");
            }
            else {
                if (dayBOX.getSelectedIndex() > 28 ) {
                    dayBOX.setSelectedIndex(0);
                }
                if (dayBOX.getItemCount() > 29) {
                    for(int i=29; i < dayBOX.getItemCount(); i++) {
                        dayBOX.removeItemAt(i);
                    }
                }
                log.info("February with 28 days");
            }
        }
        else if(monthBOX.getSelectedIndex() > 0 &&
                monthWith_31_Days[monthBOX.getSelectedIndex()-1] != 0 ){

            if (dayBOX.getItemCount() < 32) {
                for(int i = dayBOX.getItemCount(); i <= 31; i++){
                    dayBOX.addItem(i);
                }
            }

            log.info("month with 31 days");
        }
        else if(monthBOX.getSelectedIndex() > 0 &&
                monthWith_31_Days[monthBOX.getSelectedIndex()-1] == 0){
            if (dayBOX.getSelectedIndex() > 30) {
                dayBOX.setSelectedIndex(0);
            }
            if (dayBOX.getItemCount() < 31) {
                for(int i = dayBOX.getItemCount(); i <= 31; i++){
                    dayBOX.addItem(i);
                }
            }
            else if(dayBOX.getItemCount() > 31){
                dayBOX.removeItemAt(31);
            }

            log.info("month with 30 days");

        }
        log.info("cacasde calendar check");
    }


    private void signupBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupBTNActionPerformed
        commitable = true;
        checkFirstName();
        checkLastName();
        checkSex();
        checkYear();
        checkMonth();
        checkDay();
        checkUsername();
        checkPassword();
        checkEmail();

        if (commitable) {
            String username = usernameTXT.getText();
            String password = new String(passwdTXT.getPassword());
            String email = emailTXT.getText();
            String firstName = firstNameTXT.getText();
            String lastName = lastNameTXT.getText();
            int sex = sexBox.getSelectedIndex();
            int year = yearBOX.getSelectedIndex();
            int month = monthBOX.getSelectedIndex();
            int day = dayBOX.getSelectedIndex();
            
            URLConnection con = null;
            
            try {
                con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");
            } catch (Exception ex) {
                notConnectDialog.setVisible(true);
                log.info("can't connect to server");
            }

            try {
                if (con != null) {
                    log.info("commitable");
                    HashMap<String, String> param = new HashMap<String, String>();
                    param.put("firstName", firstName);
                    param.put("lastName", lastName);
                    param.put("username", username);
                    param.put("password", password);
                    param.put("email", email);
                    param.put("sex", sex + "");
                    param.put("year", year + "");
                    param.put("month", month + "");
                    param.put("day", day + "");

                    param.put("action", "signup");

                    OutputStream os = con.getOutputStream();
                    ObjectOutputStream oos = new ObjectOutputStream(os);
                    oos.writeObject(param);
                    oos.flush();
                    oos.close();
                    log.info("write request parameter to server");

                    InputStream is = con.getInputStream();
                    ObjectInputStream ois = new ObjectInputStream(is);

                    int err_code = (Integer)ois.readObject();
                    ois.close();

                    switch (err_code) {
                        case 0:     // success
                            addSuccessDialog.setVisible(true);
                            log.info("add user success");
                            break;
                        case 1:     // user is existed
                            availableSuccessLabel.setVisible(false);
                            usernameErrLabel.setVisible(true);
                            usernameErrLabel.setText("user is existed");
                            log.info("username has already been taken");
                            break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                log.severe(ex.getMessage());
            } catch (IOException ioe) {
                log.severe(ioe.getMessage());
            }
        }
    }//GEN-LAST:event_signupBTNActionPerformed

    private void resetBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBTNActionPerformed
        emailTXT.setText("");
        passwdTXT.setText("");
        rePasswordTXT.setText("");
        usernameTXT.setText("");
        firstNameTXT.setText("");
        lastNameTXT.setText("");
        sexBox.setSelectedIndex(0);
        yearBOX.setSelectedIndex(0);
        monthBOX.setSelectedIndex(0);
        dayBOX.setSelectedIndex(0);
    }//GEN-LAST:event_resetBTNActionPerformed

    private void usernameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTXTFocusGained
        
        availableSuccessLabel.setVisible(false);
        usernameErrLabel.setVisible(false);
        usernameStar.setVisible(false);
    }//GEN-LAST:event_usernameTXTFocusGained

    private void passwdTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwdTXTFocusGained
        
        passwordErrLabel.setVisible(false);
        passwordStar.setVisible(false);
    }//GEN-LAST:event_passwdTXTFocusGained

    private void emailTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTXTFocusGained
        
        emailErrLabel.setVisible(false);
        emailStar.setVisible(false);
    }//GEN-LAST:event_emailTXTFocusGained

    private void availableBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableBTNActionPerformed
        commitable = true;
        String username = usernameTXT.getText();
        checkUsername();
        
        if (commitable) {
            URLConnection con = null;

            try {
                con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");
            } catch (Exception ex) {
                notConnectDialog.setVisible(true);
                log.info("can't connect to server");
            }

            if (con != null) {
                try {
                    HashMap<String, String> param = new HashMap<String, String>();
                    param.put("username", username);
                    param.put("action", "checkAvailable");

                    OutputStream os = con.getOutputStream();
                    ObjectOutputStream oos = new ObjectOutputStream(os);

                    oos.writeObject(param);
                    oos.flush();
                    oos.close();

                    log.info("send username to server");

                    InputStream is = con.getInputStream();
                    ObjectInputStream ois = new ObjectInputStream(is);
                    int err_code = (Integer)ois.readObject();
                    ois.close();

                    switch (err_code) {
                        case 0:
                            usernameErrLabel.setVisible(false);
                            availableSuccessLabel.setVisible(true);
                            availableSuccessLabel.setText(username+" is available");
                            log.info("available");
                            break;
                        case 1:
                            availableSuccessLabel.setVisible(false);
                            usernameErrLabel.setVisible(true);
                            usernameErrLabel.setText(username+" is not available");
                            log.info("not avaiable");
                            break;
                    }

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(RegisterApplet.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(RegisterApplet.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_availableBTNActionPerformed

    private void ucenterLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ucenterLabelMouseClicked
        try {
            URL url = new URL(getCodeBase().toString() + "ucenter.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to ucenter.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_ucenterLabelMouseClicked

    private void openAccountLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openAccountLabelMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "open.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to open.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_openAccountLabelMouseClicked

    private void ucenterLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ucenterLabelMouseEntered
        
        addSuccessDialog.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_ucenterLabelMouseEntered

    private void openAccountLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openAccountLabelMouseEntered
        
        addSuccessDialog.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_openAccountLabelMouseEntered

    private void ucenterLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ucenterLabelMouseExited
        
        addSuccessDialog.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_ucenterLabelMouseExited

    private void openAccountLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openAccountLabelMouseExited
        
        addSuccessDialog.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_openAccountLabelMouseExited

    private void loginLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginLabelMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_loginLabelMouseEntered

    private void firstNameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTXTFocusGained
        
        firstNameErrLabel.setVisible(false);
        firstNameStar.setVisible(false);
    }//GEN-LAST:event_firstNameTXTFocusGained

    private void lastNameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTXTFocusGained
        
        lastNameErrLabel.setVisible(false);
        lastNameStar.setVisible(false);
    }//GEN-LAST:event_lastNameTXTFocusGained

    private void rePasswordTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rePasswordTXTFocusGained
        
        rePasswordErrLabel.setVisible(false);
        rePasswordStar.setVisible(false);
    }//GEN-LAST:event_rePasswordTXTFocusGained

    private void firstNameTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTXTFocusLost
        
        checkFirstName();
    }//GEN-LAST:event_firstNameTXTFocusLost

    private void lastNameTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTXTFocusLost
        
        checkLastName();
    }//GEN-LAST:event_lastNameTXTFocusLost

    private void usernameTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTXTFocusLost
        
        checkUsername();
    }//GEN-LAST:event_usernameTXTFocusLost

    private void passwdTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwdTXTFocusLost
        
        checkPassword();
    }//GEN-LAST:event_passwdTXTFocusLost

    private void rePasswordTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rePasswordTXTFocusLost
        
        checkRePassword();
    }//GEN-LAST:event_rePasswordTXTFocusLost

    private void emailTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTXTFocusLost
        
        checkEmail();
    }//GEN-LAST:event_emailTXTFocusLost

    private void loginLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginLabelMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_loginLabelMouseExited

    private void loginLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginLabelMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "login.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to login.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_loginLabelMouseClicked

    private void sexBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sexBoxFocusGained
        
        sexStar.setVisible(false);
        sexErrLabel.setVisible(false);
    }//GEN-LAST:event_sexBoxFocusGained

    private void sexBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sexBoxFocusLost
        
        checkSex();
    }//GEN-LAST:event_sexBoxFocusLost

    private void yearBOXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearBOXFocusGained
        
        yearStar.setVisible(false);
        birthdayErrLabel.setVisible(false);
    }//GEN-LAST:event_yearBOXFocusGained

    private void monthBOXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthBOXFocusGained
        
        monthStar.setVisible(false);
        birthdayErrLabel.setVisible(false);
    }//GEN-LAST:event_monthBOXFocusGained

    private void monthBOXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthBOXFocusLost
        cacasdeCal();
        checkYear();
        checkMonth();
        checkDay();
    }//GEN-LAST:event_monthBOXFocusLost

    private void dayBOXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayBOXFocusGained
        
        dayStar.setVisible(false);
        birthdayErrLabel.setVisible(false);
    }//GEN-LAST:event_dayBOXFocusGained

    private void dayBOXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayBOXFocusLost
        
        checkYear();
        checkMonth();
        checkDay();
    }//GEN-LAST:event_dayBOXFocusLost

    private void yearBOXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearBOXFocusLost
        cacasdeCal();
        checkYear();
        checkMonth();
        checkDay();
    }//GEN-LAST:event_yearBOXFocusLost

    private void yearBOXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yearBOXItemStateChanged
        
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cacasdeCal();
            checkYear();
            log.info("changing year");
        }
    }//GEN-LAST:event_yearBOXItemStateChanged

    private void monthBOXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_monthBOXItemStateChanged
        
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cacasdeCal();
            checkMonth();
            log.info("changing month");
        }
    }//GEN-LAST:event_monthBOXItemStateChanged

    private void notConnectDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_notConnectDialogWindowClosing
        
        notConnectDialog.dispose();
    }//GEN-LAST:event_notConnectDialogWindowClosing

    private void addSuccessDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_addSuccessDialogWindowClosing
        
        addSuccessDialog.dispose();
    }//GEN-LAST:event_addSuccessDialogWindowClosing

    private void dayBOXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dayBOXItemStateChanged
        
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            checkDay();
            log.info("changing day");
        }
    }//GEN-LAST:event_dayBOXItemStateChanged

    private void indexLinkLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_indexLinkLabelMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "index.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to index.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_indexLinkLabelMouseClicked

    private void indexLinkLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_indexLinkLabelMouseEntered
        
        addSuccessDialog.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_indexLinkLabelMouseEntered

    private void indexLinkLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_indexLinkLabelMouseExited
        
        addSuccessDialog.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_indexLinkLabelMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actionChooseLabel;
    private javax.swing.JDialog addSuccessDialog;
    private javax.swing.JLabel alreadyAccountLabel;
    private javax.swing.JButton availableBTN;
    private javax.swing.JLabel availableSuccessLabel;
    private javax.swing.JLabel birthdayErrLabel;
    private javax.swing.JLabel birthdayLabel;
    private javax.swing.JLabel congratulateLabel;
    private javax.swing.JComboBox dayBOX;
    private javax.swing.JLabel dayStar;
    private javax.swing.JLabel emailErrLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel emailStar;
    private javax.swing.JTextField emailTXT;
    private javax.swing.JLabel firstNameErrLabel;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel firstNameStar;
    private javax.swing.JTextField firstNameTXT;
    private javax.swing.JLabel formnameLabel;
    private javax.swing.JLabel indexLinkLabel;
    private javax.swing.JLabel lastNameErrLabel;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel lastNameStar;
    private javax.swing.JTextField lastNameTXT;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JComboBox monthBOX;
    private javax.swing.JLabel monthStar;
    private javax.swing.JDialog notConnectDialog;
    private javax.swing.JLabel notConnectMSG;
    private javax.swing.JLabel openAccountLabel;
    private javax.swing.JPasswordField passwdTXT;
    private javax.swing.JLabel passwordErrLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordStar;
    private javax.swing.JLabel rePasswordErrLabel;
    private javax.swing.JLabel rePasswordLabel;
    private javax.swing.JLabel rePasswordStar;
    private javax.swing.JPasswordField rePasswordTXT;
    private javax.swing.JButton resetBTN;
    private javax.swing.JComboBox sexBox;
    private javax.swing.JLabel sexErrLabel;
    private javax.swing.JLabel sexLabel;
    private javax.swing.JLabel sexStar;
    private javax.swing.JButton signupBTN;
    private javax.swing.JLabel ucenterLabel;
    private javax.swing.JLabel usernameErrLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameStar;
    private javax.swing.JTextField usernameTXT;
    private javax.swing.JComboBox yearBOX;
    private javax.swing.JLabel yearStar;
    // End of variables declaration//GEN-END:variables

}
