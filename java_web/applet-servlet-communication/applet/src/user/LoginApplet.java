/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LoginApplet.java
 *
 * Created on 09-Dec-2010, 22:02:26
 */

package user;

import java.applet.AppletContext;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JLabel;

/**
 *
 * @author pythonee
 */
public class LoginApplet extends javax.swing.JApplet {
    final static Logger log = Logger.getLogger("LoginApplet");
    boolean condition = true;
    /** Initializes the applet LoginApplet */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            log.severe(ex.getMessage());
        }

        loginSuccessDialog.setSize(445, 190);
        msgBox.setSize(519, 147);
        setSize(532, 386);
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screen = tk.getScreenSize();
        int width = screen.width;
        int height = screen.height;
        int ncdlgWidth = msgBox.getWidth();
        int ncdlgHeight = msgBox.getHeight();

        int loginWidth = loginSuccessDialog.getWidth();
        int loginHeight = loginSuccessDialog.getHeight();

        msgBox.setLocation((width - ncdlgWidth) / 2, (height - ncdlgHeight) / 2);
        loginSuccessDialog.setLocation((width - loginWidth) / 2, (height - loginHeight) / 2);

        msgBox.setVisible(false);
        loginSuccessDialog.setVisible(false);

        passwordTXT.enableInputMethods(true);
    }

    @Override
    public void stop() {
        msgBox.dispose();
        loginSuccessDialog.dispose();
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgBox = new javax.swing.JDialog();
        msgText = new javax.swing.JLabel();
        loginSuccessDialog = new javax.swing.JDialog();
        timeLabel = new javax.swing.JLabel();
        staticLabel = new javax.swing.JLabel();
        loginSuccessMSG = new javax.swing.JLabel();
        linkLabel = new javax.swing.JLabel();
        formNameLabel = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameTXT = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        loginBTN = new javax.swing.JButton();
        resetBTN = new javax.swing.JButton();
        usernameErrLabel = new javax.swing.JLabel();
        usernameErrLabel.setVisible(false);
        passwordTXT = new javax.swing.JPasswordField();
        passwordErrLabel = new javax.swing.JLabel();
        forgotPasswordLabel = new javax.swing.JLabel();
        hintLabel = new javax.swing.JLabel();
        signUpLink = new javax.swing.JLabel();

        msgBox.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        msgBox.setTitle("Connect Error");
        msgBox.setIconImage(null);
        msgBox.setIconImages(null);
        msgBox.setModal(true);
        msgBox.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                msgBoxWindowClosing(evt);
            }
        });

        msgText.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 17));
        msgText.setForeground(new java.awt.Color(242, 21, 15));
        msgText.setText("Err_Msg");

        javax.swing.GroupLayout msgBoxLayout = new javax.swing.GroupLayout(msgBox.getContentPane());
        msgBox.getContentPane().setLayout(msgBoxLayout);
        msgBoxLayout.setHorizontalGroup(
            msgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgBoxLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(msgText)
                .addContainerGap(430, Short.MAX_VALUE))
        );
        msgBoxLayout.setVerticalGroup(
            msgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgBoxLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(msgText)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        loginSuccessDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        loginSuccessDialog.setTitle("Login Success");
        loginSuccessDialog.setIconImage(null);
        loginSuccessDialog.setIconImages(null);
        loginSuccessDialog.setModal(true);
        loginSuccessDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                loginSuccessDialogWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                loginSuccessDialogWindowOpened(evt);
            }
        });
        loginSuccessDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        timeLabel.setText("5");
        loginSuccessDialog.getContentPane().add(timeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 79, -1, -1));

        staticLabel.setText("s after jump to ");
        loginSuccessDialog.getContentPane().add(staticLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 79, -1, -1));

        loginSuccessMSG.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        loginSuccessMSG.setText("Login Success");
        loginSuccessDialog.getContentPane().add(loginSuccessMSG, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 188, 30));

        linkLabel.setForeground(new java.awt.Color(0, 0, 255));
        linkLabel.setText("user center");
        linkLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linkLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                linkLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                linkLabelMouseExited(evt);
            }
        });
        loginSuccessDialog.getContentPane().add(linkLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 79, -1, -1));

        setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        formNameLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        formNameLabel.setText("User Login");
        getContentPane().add(formNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        logoLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        logoLabel.setText("E-Banking");
        getContentPane().add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, -1, -1));

        usernameLabel.setText("username:");
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 87, -1, -1));

        usernameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTXTFocusLost(evt);
            }
        });
        getContentPane().add(usernameTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 85, 218, -1));

        passwordLabel.setText("password:");
        getContentPane().add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, -1, -1));

        loginBTN.setText("Login");
        loginBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBTNActionPerformed(evt);
            }
        });
        getContentPane().add(loginBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, -1, -1));

        resetBTN.setText("Reset");
        resetBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBTNActionPerformed(evt);
            }
        });
        getContentPane().add(resetBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, -1, -1));

        usernameErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        usernameErrLabel.setText("username err");
        getContentPane().add(usernameErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 131, -1, -1));

        passwordTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTXTFocusLost(evt);
            }
        });
        getContentPane().add(passwordTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 180, 218, -1));

        passwordErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        passwordErrLabel.setText("password err");
        passwordErrLabel.setVisible(false);
        getContentPane().add(passwordErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 226, -1, -1));

        forgotPasswordLabel.setForeground(new java.awt.Color(0, 0, 255));
        forgotPasswordLabel.setText("Forgotten your password?");
        forgotPasswordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                forgotPasswordLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                forgotPasswordLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                forgotPasswordLabelMouseExited(evt);
            }
        });
        getContentPane().add(forgotPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 250, 220, -1));

        hintLabel.setText("new to e-banking?");
        getContentPane().add(hintLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, -1));

        signUpLink.setForeground(new java.awt.Color(0, 0, 255));
        signUpLink.setText("sign up");
        signUpLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signUpLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signUpLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signUpLinkMouseExited(evt);
            }
        });
        getContentPane().add(signUpLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void loginBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBTNActionPerformed

        boolean commitable = true;

        String username = usernameTXT.getText();
        String password = new String(passwordTXT.getPassword());

        if (username.length() == 0) {
            commitable = false;
            usernameErrLabel.setVisible(true);
            usernameErrLabel.setText("please input username");
        }

        if (password.length() == 0) {
            commitable = false;
            passwordErrLabel.setVisible(true);
            passwordErrLabel.setText("please input password");
        }

        if (commitable) {
            URLConnection con = null;

            try {
                con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");
            } catch (Exception ex) {
                msgBox.setTitle("error");
                msgBox.setVisible(true);
                msgText.setText("Unable to reach server. Please check your Internet connection.");
                log.info("cannot connect to server");
            }

            if (con != null) {
               try {
                    
                    OutputStream os = con.getOutputStream();
                    ObjectOutputStream oos = new ObjectOutputStream(os);
                    HashMap<String, String> param = new HashMap<String, String>();

                    param.put("username", username);
                    param.put("password", password);
                    param.put("action", "signin");
                    oos.writeObject(param);
                    oos.close();

                    log.info("write request parameter to server");

                    InputStream is = con.getInputStream();
                    ObjectInputStream ois = new ObjectInputStream(is);

                    int err_code = (Integer)ois.readObject();
                    ois.close();

                    switch (err_code) {
                        case 0:     // success
                            loginSuccessDialog.setVisible(true);
                            log.info("login success");
                            break;
                        case 1:     // user not existed
                            usernameErrLabel.setVisible(true);
                            usernameErrLabel.setText("user not existed");
                            log.info("user not existed");
                            break;
                        case 2:     // password is not correct
                            passwordErrLabel.setVisible(true);
                            passwordErrLabel.setText("password is not correct");
                            log.info("password is not correct");
                            break;
                    }

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(LoginApplet.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(LoginApplet.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 
        }
    }//GEN-LAST:event_loginBTNActionPerformed

    private void resetBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBTNActionPerformed
        
        usernameTXT.setText("");
        passwordTXT.setText("");
    }//GEN-LAST:event_resetBTNActionPerformed

    private void usernameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTXTFocusGained
        
        usernameErrLabel.setVisible(false);
    }//GEN-LAST:event_usernameTXTFocusGained

    private void passwordTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTXTFocusGained
        
        passwordErrLabel.setVisible(false);
    }//GEN-LAST:event_passwordTXTFocusGained

    private void msgBoxWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_msgBoxWindowClosing
        
        msgBox.dispose();
}//GEN-LAST:event_msgBoxWindowClosing

    private void loginSuccessDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_loginSuccessDialogWindowClosing
        
        try {
            URL url = new URL(getCodeBase().toString() + "ucenter.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to ucenter.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
        loginSuccessDialog.dispose();
    }//GEN-LAST:event_loginSuccessDialogWindowClosing

    private void linkLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkLabelMouseClicked
        
        loginSuccessDialog.dispose();
        try {
            URL url = new URL(getCodeBase().toString() + "ucenter.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to ucenter.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_linkLabelMouseClicked

    private void linkLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkLabelMouseEntered
        
        loginSuccessDialog.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_linkLabelMouseEntered

    private void linkLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkLabelMouseExited
        
        loginSuccessDialog.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_linkLabelMouseExited

    private void loginSuccessDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_loginSuccessDialogWindowOpened
        timeLabel.setText("5");
        Thread timer = new Thread() {

            @Override
            public void run() {
                Timer timer = new Timer();
                DisplayTask task = new DisplayTask(timer, loginSuccessDialog, timeLabel);
                timer.schedule(task, 1, 1000);
                log.info("thread running");
            }
        };

        timer.start();

        try {
            timer.join();
        } catch (InterruptedException ex) {
            log.info("interrupt");
            Logger.getLogger(LoginApplet.class.getName()).log(Level.SEVERE, null, ex);
        }

        log.info("success dialog opened");
       
    }//GEN-LAST:event_loginSuccessDialogWindowOpened

    private class DisplayTask extends TimerTask{
        int count = 0;
        Timer timer;
        JDialog dialog;
        JLabel label;

        public DisplayTask(Timer timer,JDialog dialog,JLabel label) {
            this.timer = timer;
            this.dialog = dialog;
            this.label = label;
        }

        @Override
        public void run() {
            label.setText((5 - count) + "");
            label.repaint();

            if (count == 5) {
                try {
                    dialog.dispose();
                    this.cancel();
                    timer.cancel();
                    timer = null;
                    URL url = new URL(getCodeBase().toString() + "ucenter.jsp");
                    AppletContext ac = getAppletContext();
                    ac.showDocument(url);
                    log.info("link jump to ucenter.jsp");
                } catch (MalformedURLException ex) {
                    Logger.getLogger(LoginApplet.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            count++;
            log.info("running timer");
        }
    }

    private void forgotPasswordLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotPasswordLabelMouseClicked
        
        String username = usernameTXT.getText();
        boolean commitable = true;
        if (username.length() == 0) {
            usernameErrLabel.setVisible(true);
            usernameErrLabel.setText("Required field cannot be left blank");
            log.info("the username textfield is blank");
            commitable = false;
        }
        else{
            String regex = "\\w+";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(username);

            if (!matcher.matches()) {
                usernameErrLabel.setVisible(true);
                usernameErrLabel.setText("Sorry, only letters (a-z), numbers (0-9), and underline (_) are allowed");
                log.info("username textfield contain unvalid character");
                commitable = false;
            }
        }

        if (commitable) {
            URLConnection con = null;

            try {
                con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");
            } catch (Exception ex) {
                msgBox.setTitle("error");
                msgBox.setVisible(true);
                msgText.setText("Unable to reach server. Please check your Internet connection.");
                log.info("cannot connect to server");
            }

            if (con != null) {
                try {
                    HashMap<String, String> param = new HashMap<String, String>();
                    param.put("username", username);
                    param.put("action", "resetPassword");
                    OutputStream os = con.getOutputStream();
                    ObjectOutputStream oos = new ObjectOutputStream(os);
                    oos.writeObject(param);
                    oos.flush();
                    oos.close();

                    InputStream is = con.getInputStream();
                    ObjectInputStream ois = new ObjectInputStream(is);

                    int err_code = (Integer)ois.readObject();

                    switch (err_code) {
                        case 0:
                            msgBox.setTitle("success");
                            msgText.setText("Ok, we've sent the instructions to your email.Go check it! ");
                            msgBox.setVisible(true);
                            log.info("email send complete");
                            break;
                        case 1:
                            usernameErrLabel.setVisible(true);
                            usernameErrLabel.setText("user not existed");
                            log.info("user not existed");
                            break;

                       case 2:
                           msgBox.setTitle("Error");
                           msgText.setText("Fail to send email");
                           msgBox.setVisible(true);
                           log.info("exception");
                    }

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(LoginApplet.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(LoginApplet.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_forgotPasswordLabelMouseClicked

    private void forgotPasswordLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotPasswordLabelMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_forgotPasswordLabelMouseEntered

    private void forgotPasswordLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotPasswordLabelMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_forgotPasswordLabelMouseExited

    private void signUpLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUpLinkMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "register.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to register.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_signUpLinkMouseClicked

    private void signUpLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUpLinkMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_signUpLinkMouseEntered

    private void signUpLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signUpLinkMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_signUpLinkMouseExited

    private void usernameTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTXTFocusLost
        if (usernameTXT.getText().length() > 0) {
            usernameErrLabel.setVisible(false);
        }
    }//GEN-LAST:event_usernameTXTFocusLost

    private void passwordTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTXTFocusLost
        if (passwordTXT.getPassword().length > 0) {

            passwordErrLabel.setVisible(false);

        }
    }//GEN-LAST:event_passwordTXTFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel forgotPasswordLabel;
    private javax.swing.JLabel formNameLabel;
    private javax.swing.JLabel hintLabel;
    private javax.swing.JLabel linkLabel;
    private javax.swing.JButton loginBTN;
    private javax.swing.JDialog loginSuccessDialog;
    private javax.swing.JLabel loginSuccessMSG;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JDialog msgBox;
    private javax.swing.JLabel msgText;
    private javax.swing.JLabel passwordErrLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTXT;
    private javax.swing.JButton resetBTN;
    private javax.swing.JLabel signUpLink;
    private javax.swing.JLabel staticLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel usernameErrLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTXT;
    // End of variables declaration//GEN-END:variables

}
