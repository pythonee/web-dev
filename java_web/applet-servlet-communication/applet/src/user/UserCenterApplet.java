/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserCenterApplet.java
 *
 * Created on 12-Dec-2010, 03:33:21
 */

package user;

import java.applet.AppletContext;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JComboBox;
import javax.swing.JLabel;

/**
 *
 * @author pythonee
 */
public class UserCenterApplet extends javax.swing.JApplet {
    final static Logger log = Logger.getLogger("UserCenterApplet");
    boolean commitable = true;
    static int[] monthWith_31_Days = {1,0,3,0,5,0,7,8,0,10,0,12};
    int userSex = 0;
    int userBirthDay_Year = 0;
    int userBirthDay_Month = 0;
    int userBirthDay_Day = 0;
    /** Initializes the applet UserCenterApplet */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            log.severe(ex.getMessage());
        }

        setSize(778, 590);
        userDetailPanel.setSize(830, 530);
        editProfileDialog.setSize(655, 501);
        changePasswordDialog.setSize(609, 450);
        msgbox.setSize(401, 183);

        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screen = tk.getScreenSize();
        int width = screen.width;
        int height = screen.height;

        int editProfileDLGWidth = editProfileDialog.getWidth();
        int editProfileDLGHeight = editProfileDialog.getHeight();

        int changePasswordDLGWidth = changePasswordDialog.getWidth();
        int changePasswordDLGHeight = changePasswordDialog.getHeight();

        int msgBoxWidth = msgbox.getWidth();
        int msgBoxHeight = msgbox.getHeight();

        editProfileDialog.setLocation((width - editProfileDLGWidth) / 2, (height - editProfileDLGHeight) / 2);
        changePasswordDialog.setLocation((width - changePasswordDLGWidth) / 2, (height - changePasswordDLGHeight) / 2);
        msgbox.setLocation((width - msgBoxWidth) / 2, (height - msgBoxHeight) / 2);

        editProfileDialog.setVisible(false);
        changePasswordDialog.setVisible(false);
        msgbox.setVisible(false);
        linkAddress.setVisible(false);

        for (int i = 1905; i <= 2010; i++) {
            profileYearBOX.addItem(i);
        }

        for (int i = 1; i <= 31; i++) {
            profileDayBOX.addItem(i);
        }

        firstNameErrLabel.setVisible(false);
        lastNameErrLabel.setVisible(false);
        emailErrLabel.setVisible(false);
        sexStar.setVisible(false);
        yearStar.setVisible(false);
        monthStar.setVisible(false);
        dayStar.setVisible(false);
        emailSuccessLabel.setVisible(false);

        currentPasswordTXT.enableInputMethods(true);
        newPasswordTXT.enableInputMethods(true);
        verifyNewPasswordTXT.enableInputMethods(true);
    }

    @Override
    public void start() {

        fetchUserDetail();
        fetchAccountList();

    }

    @Override
    public void stop() {
        editProfileDialog.dispose();
        changePasswordDialog.dispose();
        msgbox.dispose();
    }



    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editProfileDialog = new javax.swing.JDialog();
        profileFirstnameLabel = new javax.swing.JLabel();
        profileLastNameLabel = new javax.swing.JLabel();
        profileEmailLabel = new javax.swing.JLabel();
        profileBirthdayLabel = new javax.swing.JLabel();
        profileCancelBTN = new javax.swing.JButton();
        profileConfirmBTN = new javax.swing.JButton();
        profileFirstNameTXT = new javax.swing.JTextField();
        profileLastNameTXT = new javax.swing.JTextField();
        profileEmailTXT = new javax.swing.JTextField();
        profileYearBOX = new javax.swing.JComboBox();
        profileMonthBOX = new javax.swing.JComboBox();
        profileDayBOX = new javax.swing.JComboBox();
        profileSexLabel = new javax.swing.JLabel();
        profileSexBOX = new javax.swing.JComboBox();
        dialogFormName = new javax.swing.JLabel();
        dialogLogoName = new javax.swing.JLabel();
        firstNameErrLabel = new javax.swing.JLabel();
        emailErrLabel = new javax.swing.JLabel();
        lastNameErrLabel = new javax.swing.JLabel();
        sexStar = new javax.swing.JLabel();
        yearStar = new javax.swing.JLabel();
        monthStar = new javax.swing.JLabel();
        dayStar = new javax.swing.JLabel();
        profileErrMsg = new javax.swing.JLabel();
        changePasswordDialog = new javax.swing.JDialog();
        dialogFormNameLabel = new javax.swing.JLabel();
        dialogLogoLabel = new javax.swing.JLabel();
        currentPasswordLabel = new javax.swing.JLabel();
        newPasswordLabel = new javax.swing.JLabel();
        verifyNewPasswordLabel = new javax.swing.JLabel();
        confirmChangeBTN = new javax.swing.JButton();
        cancelChangeBTN = new javax.swing.JButton();
        forgottenPasswordLabel = new javax.swing.JLabel();
        newPasswordErrLabel = new javax.swing.JLabel();
        curPasswordErrLabel = new javax.swing.JLabel();
        newPasswordTXT = new javax.swing.JPasswordField();
        verifyNewPasswordTXT = new javax.swing.JPasswordField();
        currentPasswordTXT = new javax.swing.JPasswordField();
        emailSuccessLabel = new javax.swing.JLabel();
        msgbox = new javax.swing.JDialog();
        msgLabel = new javax.swing.JLabel();
        hintLabel = new javax.swing.JLabel();
        linkTextLabel = new javax.swing.JLabel();
        linkAddress = new javax.swing.JLabel();
        formNameLabel = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        userDetailPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordDetailLabel = new javax.swing.JLabel();
        BirthdayLabel = new javax.swing.JLabel();
        emailDetailLabel = new javax.swing.JLabel();
        usernameDetaiLabel = new javax.swing.JLabel();
        AccountList = new javax.swing.JLabel();
        accountCombox = new javax.swing.JComboBox();
        emailLabel = new javax.swing.JLabel();
        birthdayDetailLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        firstNameDetail = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        lastNameDetail = new javax.swing.JLabel();
        signoutLinkLabel = new javax.swing.JLabel();
        changePasswordLink = new javax.swing.JLabel();
        accountManagerLink = new javax.swing.JLabel();
        editProfileLink = new javax.swing.JLabel();
        openAccountLink = new javax.swing.JLabel();

        editProfileDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        editProfileDialog.setTitle("Edit Profile");
        editProfileDialog.setIconImage(null);
        editProfileDialog.setIconImages(null);
        editProfileDialog.setModal(true);
        editProfileDialog.setResizable(false);
        editProfileDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                editProfileDialogWindowOpened(evt);
            }
        });
        editProfileDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        profileFirstnameLabel.setText("First name:");
        editProfileDialog.getContentPane().add(profileFirstnameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 75, -1, -1));

        profileLastNameLabel.setText("Last name:");
        editProfileDialog.getContentPane().add(profileLastNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, -1, -1));

        profileEmailLabel.setText("E-mail:");
        editProfileDialog.getContentPane().add(profileEmailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, 215, -1, -1));

        profileBirthdayLabel.setText("Birthday:");
        editProfileDialog.getContentPane().add(profileBirthdayLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 347, -1, -1));

        profileCancelBTN.setText("Cancel");
        profileCancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileCancelBTNActionPerformed(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileCancelBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 424, -1, -1));

        profileConfirmBTN.setText("Confirm");
        profileConfirmBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileConfirmBTNActionPerformed(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileConfirmBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(399, 424, -1, -1));

        profileFirstNameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                profileFirstNameTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                profileFirstNameTXTFocusLost(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileFirstNameTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, 182, -1));

        profileLastNameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                profileLastNameTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                profileLastNameTXTFocusLost(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileLastNameTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 182, -1));

        profileEmailTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                profileEmailTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                profileEmailTXTFocusLost(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileEmailTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 210, 183, -1));

        profileYearBOX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year" }));
        profileYearBOX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                profileYearBOXItemStateChanged(evt);
            }
        });
        profileYearBOX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                profileYearBOXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                profileYearBOXFocusLost(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileYearBOX, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 342, -1, -1));

        profileMonthBOX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        profileMonthBOX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                profileMonthBOXItemStateChanged(evt);
            }
        });
        profileMonthBOX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                profileMonthBOXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                profileMonthBOXFocusLost(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileMonthBOX, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 342, 97, -1));

        profileDayBOX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day" }));
        profileDayBOX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                profileDayBOXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                profileDayBOXFocusLost(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileDayBOX, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 342, -1, -1));

        profileSexLabel.setText("I am:");
        editProfileDialog.getContentPane().add(profileSexLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 287, -1, -1));

        profileSexBOX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sex", "Male", "Female" }));
        profileSexBOX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                profileSexBOXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                profileSexBOXFocusLost(evt);
            }
        });
        editProfileDialog.getContentPane().add(profileSexBOX, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 282, 79, -1));

        dialogFormName.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        dialogFormName.setText("Edit Profile");
        editProfileDialog.getContentPane().add(dialogFormName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        dialogLogoName.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        dialogLogoName.setText("E-Banking");
        editProfileDialog.getContentPane().add(dialogLogoName, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, -1, -1));

        firstNameErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        firstNameErrLabel.setText("first name err");
        editProfileDialog.getContentPane().add(firstNameErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 104, -1, -1));

        emailErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        emailErrLabel.setText("email err");
        editProfileDialog.getContentPane().add(emailErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 244, 73, -1));

        lastNameErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        lastNameErrLabel.setText("last name err");
        editProfileDialog.getContentPane().add(lastNameErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 174, -1, -1));

        sexStar.setForeground(new java.awt.Color(255, 0, 0));
        sexStar.setText("*");
        editProfileDialog.getContentPane().add(sexStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 287, -1, -1));

        yearStar.setForeground(new java.awt.Color(255, 0, 0));
        yearStar.setText("*");
        editProfileDialog.getContentPane().add(yearStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 347, -1, -1));

        monthStar.setForeground(new java.awt.Color(255, 0, 0));
        monthStar.setText("*");
        editProfileDialog.getContentPane().add(monthStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 347, -1, -1));

        dayStar.setForeground(new java.awt.Color(255, 0, 0));
        dayStar.setText("*");
        editProfileDialog.getContentPane().add(dayStar, new org.netbeans.lib.awtextra.AbsoluteConstraints(604, 347, -1, -1));

        profileErrMsg.setForeground(new java.awt.Color(255, 0, 0));
        profileErrMsg.setText("err_msg");
        editProfileDialog.getContentPane().add(profileErrMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 388, -1, -1));

        changePasswordDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        changePasswordDialog.setTitle("Change Password");
        changePasswordDialog.setIconImage(null);
        changePasswordDialog.setIconImages(null);
        changePasswordDialog.setModal(true);
        changePasswordDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                changePasswordDialogWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                changePasswordDialogWindowOpened(evt);
            }
        });
        changePasswordDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dialogFormNameLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        dialogFormNameLabel.setText("Change Password");
        changePasswordDialog.getContentPane().add(dialogFormNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        dialogLogoLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        dialogLogoLabel.setText("E-Banking");
        changePasswordDialog.getContentPane().add(dialogLogoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(514, 12, -1, -1));

        currentPasswordLabel.setText("Current Password:");
        changePasswordDialog.getContentPane().add(currentPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        newPasswordLabel.setText("New Password:");
        changePasswordDialog.getContentPane().add(newPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        verifyNewPasswordLabel.setText("Verify New Password:");
        changePasswordDialog.getContentPane().add(verifyNewPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        confirmChangeBTN.setText("Confirm");
        confirmChangeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmChangeBTNActionPerformed(evt);
            }
        });
        changePasswordDialog.getContentPane().add(confirmChangeBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, -1, -1));

        cancelChangeBTN.setText("Cancel");
        cancelChangeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelChangeBTNActionPerformed(evt);
            }
        });
        changePasswordDialog.getContentPane().add(cancelChangeBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, -1, -1));

        forgottenPasswordLabel.setForeground(new java.awt.Color(0, 0, 255));
        forgottenPasswordLabel.setText("Forgotten?");
        forgottenPasswordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                forgottenPasswordLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                forgottenPasswordLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                forgottenPasswordLabelMouseExited(evt);
            }
        });
        changePasswordDialog.getContentPane().add(forgottenPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, -1, -1));

        newPasswordErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        newPasswordErrLabel.setText("new password_err");
        changePasswordDialog.getContentPane().add(newPasswordErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, -1, -1));

        curPasswordErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        curPasswordErrLabel.setText("password_err");
        changePasswordDialog.getContentPane().add(curPasswordErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, -1));

        newPasswordTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newPasswordTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newPasswordTXTFocusLost(evt);
            }
        });
        changePasswordDialog.getContentPane().add(newPasswordTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 220, -1));

        verifyNewPasswordTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                verifyNewPasswordTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                verifyNewPasswordTXTFocusLost(evt);
            }
        });
        changePasswordDialog.getContentPane().add(verifyNewPasswordTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 220, -1));

        currentPasswordTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                currentPasswordTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                currentPasswordTXTFocusLost(evt);
            }
        });
        changePasswordDialog.getContentPane().add(currentPasswordTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, 220, -1));

        emailSuccessLabel.setForeground(new java.awt.Color(44, 150, 37));
        emailSuccessLabel.setText("email have sent");
        changePasswordDialog.getContentPane().add(emailSuccessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        msgbox.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        msgbox.setTitle("Msgbox title\n");
        msgbox.setIconImage(null);
        msgbox.setIconImages(null);
        msgbox.setModal(true);

        msgLabel.setForeground(new java.awt.Color(255, 0, 0));
        msgLabel.setText("err_msg");

        hintLabel.setText("You can click the link below to solve this problem:");

        linkTextLabel.setForeground(new java.awt.Color(0, 0, 255));
        linkTextLabel.setText("linkText");
        linkTextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linkTextLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                linkTextLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                linkTextLabelMouseExited(evt);
            }
        });

        linkAddress.setText("linkAddress");

        javax.swing.GroupLayout msgboxLayout = new javax.swing.GroupLayout(msgbox.getContentPane());
        msgbox.getContentPane().setLayout(msgboxLayout);
        msgboxLayout.setHorizontalGroup(
            msgboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgboxLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(msgboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(msgboxLayout.createSequentialGroup()
                        .addComponent(hintLabel)
                        .addContainerGap())
                    .addGroup(msgboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(msgboxLayout.createSequentialGroup()
                            .addComponent(linkTextLabel)
                            .addContainerGap())
                        .addGroup(msgboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(msgboxLayout.createSequentialGroup()
                                .addComponent(linkAddress)
                                .addContainerGap())
                            .addGroup(msgboxLayout.createSequentialGroup()
                                .addComponent(msgLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(311, 311, 311))))))
        );
        msgboxLayout.setVerticalGroup(
            msgboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(msgboxLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(msgLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(hintLabel)
                .addGap(27, 27, 27)
                .addComponent(linkTextLabel)
                .addGap(26, 26, 26)
                .addComponent(linkAddress)
                .addContainerGap())
        );

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        formNameLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        formNameLabel.setText("User Center");
        getContentPane().add(formNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        logoLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        logoLabel.setText("E-Banking");
        getContentPane().add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        userDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("User Detail"));
        userDetailPanel.setMinimumSize(new java.awt.Dimension(555, 360));

        usernameLabel.setText("UserName:");

        passwordLabel.setText("Password:");

        passwordDetailLabel.setText("********");

        BirthdayLabel.setText("Birthday:");

        emailDetailLabel.setText("example@mail.com");

        usernameDetaiLabel.setText("username");

        AccountList.setText("Account List:");

        accountCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Account" }));

        emailLabel.setText("E-mail:");

        birthdayDetailLabel.setText("yyyy-mm-dd");

        firstNameLabel.setText("first name:");

        firstNameDetail.setText("first name");

        lastNameLabel.setText("last name:");

        lastNameDetail.setText("last name");

        signoutLinkLabel.setForeground(new java.awt.Color(0, 0, 255));
        signoutLinkLabel.setText("Sign Out");
        signoutLinkLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signoutLinkLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signoutLinkLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signoutLinkLabelMouseExited(evt);
            }
        });

        changePasswordLink.setForeground(new java.awt.Color(0, 0, 255));
        changePasswordLink.setText("Change Password");
        changePasswordLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changePasswordLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changePasswordLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changePasswordLinkMouseExited(evt);
            }
        });

        accountManagerLink.setForeground(new java.awt.Color(0, 0, 255));
        accountManagerLink.setText("Account Manager");
        accountManagerLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountManagerLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accountManagerLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accountManagerLinkMouseExited(evt);
            }
        });

        editProfileLink.setForeground(new java.awt.Color(0, 0, 255));
        editProfileLink.setText("Edit Profile");
        editProfileLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editProfileLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editProfileLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editProfileLinkMouseExited(evt);
            }
        });

        openAccountLink.setForeground(new java.awt.Color(0, 0, 255));
        openAccountLink.setText("Open Another Account");
        openAccountLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openAccountLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                openAccountLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                openAccountLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout userDetailPanelLayout = new javax.swing.GroupLayout(userDetailPanel);
        userDetailPanel.setLayout(userDetailPanelLayout);
        userDetailPanelLayout.setHorizontalGroup(
            userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDetailPanelLayout.createSequentialGroup()
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userDetailPanelLayout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(openAccountLink)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(accountManagerLink))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userDetailPanelLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lastNameLabel)
                            .addComponent(firstNameLabel)
                            .addComponent(usernameLabel)
                            .addComponent(passwordLabel)
                            .addComponent(emailLabel)
                            .addComponent(BirthdayLabel)
                            .addComponent(AccountList))
                        .addGap(44, 44, 44)
                        .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accountCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailDetailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(userDetailPanelLayout.createSequentialGroup()
                                .addComponent(passwordDetailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(58, 58, 58)
                                .addComponent(changePasswordLink))
                            .addComponent(usernameDetaiLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(birthdayDetailLabel)
                            .addComponent(lastNameDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(firstNameDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(editProfileLink)
                .addGap(39, 39, 39)
                .addComponent(signoutLinkLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );
        userDetailPanelLayout.setVerticalGroup(
            userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDetailPanelLayout.createSequentialGroup()
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(editProfileLink)
                    .addComponent(accountManagerLink)
                    .addComponent(openAccountLink)
                    .addComponent(signoutLinkLabel))
                .addGap(63, 63, 63)
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameDetail))
                .addGap(29, 29, 29)
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameDetaiLabel))
                .addGap(32, 32, 32)
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordDetailLabel)
                    .addComponent(changePasswordLink))
                .addGap(34, 34, 34)
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailDetailLabel))
                .addGap(32, 32, 32)
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BirthdayLabel)
                    .addComponent(birthdayDetailLabel))
                .addGap(28, 28, 28)
                .addGroup(userDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AccountList)
                    .addComponent(accountCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        getContentPane().add(userDetailPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 740, 530));
    }// </editor-fold>//GEN-END:initComponents


    private void fetchUserDetail(){
        URLConnection con = null;
        try {
            con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");
        } catch (Exception ex) {
            log.severe(ex.getMessage());
        }

        if (con != null) {
            try {
                OutputStream os = con.getOutputStream();
                ObjectOutputStream oos = new ObjectOutputStream(os);

                HashMap<String,String> param = new HashMap<String, String>();
                param.put("action", "fetchUserDetail");

                oos.writeObject(param);
                oos.flush();
                oos.close();

                InputStream is = con.getInputStream();
                ObjectInputStream ois = new ObjectInputStream(is);
                HashMap<String, String> user = (HashMap<String, String>) ois.readObject();

                if (user == null) {
                    userDetailPanel.setVisible(false);
                    msgbox.setTitle("Error");
                    msgLabel.setText("You have not login");
                    linkTextLabel.setText("user login form page");
                    linkAddress.setText("login.jsp");
                    msgbox.setVisible(true);

                    log.info("login first please");
                    
                } else {
                    userDetailPanel.setVisible(true);
                    firstNameDetail.setText(user.get("firstName"));
                    lastNameDetail.setText(user.get("lastName"));
                    usernameDetaiLabel.setText(user.get("username"));
                    emailDetailLabel.setText(user.get("email"));
                    birthdayDetailLabel.setText(user.get("birthday"));
                    profileFirstNameTXT.setText(firstNameDetail.getText());
                    profileLastNameTXT.setText(lastNameDetail.getText());
                    profileEmailTXT.setText(emailDetailLabel.getText());
                    int sex = Integer.parseInt(user.get("sex"));
                    profileSexBOX.setSelectedIndex(sex+1);
                    userSex = profileSexBOX.getSelectedIndex();

                    String[] birthday = birthdayDetailLabel.getText().split("-");
                    int year = Integer.parseInt(birthday[0]);
                    
                    int month = Integer.parseInt(birthday[1]);
                    
                    int day = Integer.parseInt(birthday[2]);
                    

                    profileYearBOX.setSelectedIndex(year-1904);
                    userBirthDay_Year = profileYearBOX.getSelectedIndex();
                    profileMonthBOX.setSelectedIndex(month);
                    userBirthDay_Month = profileMonthBOX.getSelectedIndex();
                    profileDayBOX.setSelectedIndex(day);
                    userBirthDay_Day = profileDayBOX.getSelectedIndex();

                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        log.info("fetch user detail");
    }


    private void fetchAccountList(){
        try {
            URLConnection con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/account");

            OutputStream os = con.getOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(os);

            HashMap<String, String> param = new HashMap<String, String>();
            param.put("action", "getUserAccout");

            oos.writeObject(param);
            oos.flush();
            oos.close();

            InputStream is = con.getInputStream();
            ObjectInputStream ois = new ObjectInputStream(is);

            ArrayList<String> accountList = (ArrayList<String>)ois.readObject();


            for(String title : accountList){
                accountCombox.addItem(title);
            }

            log.info("fetching account list");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void profileCancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileCancelBTNActionPerformed
        
        editProfileDialog.dispose();
    }//GEN-LAST:event_profileCancelBTNActionPerformed

    private void cancelChangeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelChangeBTNActionPerformed
        
        changePasswordDialog.dispose();
    }//GEN-LAST:event_cancelChangeBTNActionPerformed

    private void signoutLinkLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutLinkLabelMouseClicked
        try {
            URLConnection con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");

            OutputStream os = con.getOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(os);

            HashMap<String,String> param = new HashMap<String, String>();

            param.put("username", usernameDetaiLabel.getText());
            param.put("action", "signout");

            oos.writeObject(param);

            InputStream is = con.getInputStream();
            ObjectInputStream ois = new ObjectInputStream(is);
            int err_code = (Integer)ois.readObject();

            switch (err_code) {
                case 0:
                    log.info("log out success");
                    break;
                case 1:
                    log.info("already log out");
                    break;
            }

            try {
                URL url = new URL(getCodeBase().toString() + "index.jsp");
                AppletContext ac = this.getAppletContext();
                ac.showDocument(url);
                log.info("link jump to index.jsp");
            } catch (MalformedURLException e) {
                log.severe(e.getMessage());
            }
            
        } catch (ClassNotFoundException ex) {
            log.severe(ex.getMessage());
        } catch (MalformedURLException ex) {
            log.severe(ex.getMessage());
        } catch (IOException ex) {
            log.severe(ex.getMessage());
        }
    }//GEN-LAST:event_signoutLinkLabelMouseClicked

    private void signoutLinkLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutLinkLabelMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_signoutLinkLabelMouseEntered

    private void signoutLinkLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutLinkLabelMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_signoutLinkLabelMouseExited

    private void editProfileLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editProfileLinkMouseClicked
        
        editProfileDialog.setVisible(true);
    }//GEN-LAST:event_editProfileLinkMouseClicked

    private void editProfileLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editProfileLinkMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_editProfileLinkMouseEntered

    private void editProfileLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editProfileLinkMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_editProfileLinkMouseExited

    private void accountManagerLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountManagerLinkMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "account.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to account.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_accountManagerLinkMouseClicked

    private void accountManagerLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountManagerLinkMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_accountManagerLinkMouseEntered

    private void accountManagerLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountManagerLinkMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_accountManagerLinkMouseExited

    private void changePasswordLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePasswordLinkMouseClicked
        
        changePasswordDialog.setVisible(true);
    }//GEN-LAST:event_changePasswordLinkMouseClicked

    private void changePasswordLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePasswordLinkMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_changePasswordLinkMouseEntered

    private void changePasswordLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changePasswordLinkMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());

    }//GEN-LAST:event_changePasswordLinkMouseExited

    private void openAccountLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openAccountLinkMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "open.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to open.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_openAccountLinkMouseClicked

    private void openAccountLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openAccountLinkMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_openAccountLinkMouseEntered

    private void openAccountLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openAccountLinkMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_openAccountLinkMouseExited

    private void linkTextLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkTextLabelMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + linkAddress.getText());
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.log(Level.INFO, "link jump to{0}", linkAddress.getText());
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_linkTextLabelMouseClicked

    private void linkTextLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkTextLabelMouseEntered
        
        msgbox.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_linkTextLabelMouseEntered

    private void linkTextLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkTextLabelMouseExited
        
        msgbox.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_linkTextLabelMouseExited

    private void checkPassword(boolean commitable,String input,JLabel msg){
        if (currentPasswordTXT.getPassword().length == 0) {
            msg.setText("Required field cannot be left blank");
            msg.setVisible(true);
            commitable = false;
        }

        if (currentPasswordTXT.getPassword().length < 8) {
            msg.setText("Must have at least 8 characters");
            msg.setVisible(true);
            commitable = false;
        }
    }

    private void confirmChangeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmChangeBTNActionPerformed
        
        commitable = false;
        String curPasswd = String.valueOf(currentPasswordTXT.getPassword());
        String newPasswd = String.valueOf(newPasswordTXT.getPassword());
        if (!curPasswd.equals(newPasswd)) {
            commitable = true;
            checkPassword(commitable, curPasswd, curPasswordErrLabel);
            checkPassword(commitable, newPasswd, newPasswordErrLabel);
        }
        else{
            curPasswordErrLabel.setText("new password is same to current password");
            curPasswordErrLabel.setVisible(true);
        }

        try {
            URLConnection con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");

            OutputStream os = con.getOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(os);

            HashMap<String,String> param = new HashMap<String, String>();
            param.put("action", "changePassword");
            param.put("curPassword", currentPasswordTXT.getText());
            param.put("newPassword", newPasswordTXT.getText());

            oos.writeObject(param);
            oos.flush();
            oos.close();

            InputStream is = con.getInputStream();
            ObjectInputStream ois = new ObjectInputStream(is);

            int err_code = (Integer)ois.readObject();

            switch(err_code){
                case 0:
                    changePasswordDialog.dispose();
                    log.info("change success");
                    break;
                case 1:
                    curPasswordErrLabel.setText("password is not correct");
                    curPasswordErrLabel.setVisible(true);
                    log.info("password is not correct");
                    break;
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_confirmChangeBTNActionPerformed

    private void changePasswordDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_changePasswordDialogWindowOpened

        curPasswordErrLabel.setVisible(false);
        newPasswordErrLabel.setVisible(false);
    }//GEN-LAST:event_changePasswordDialogWindowOpened

    private void currentPasswordTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_currentPasswordTXTFocusGained
        
        curPasswordErrLabel.setVisible(false);
    }//GEN-LAST:event_currentPasswordTXTFocusGained

    private void currentPasswordTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_currentPasswordTXTFocusLost
        
        checkPassword(commitable, String.valueOf(currentPasswordTXT.getPassword()), curPasswordErrLabel);
    }//GEN-LAST:event_currentPasswordTXTFocusLost

    private void newPasswordTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPasswordTXTFocusGained
        
        newPasswordErrLabel.setVisible(false);
    }//GEN-LAST:event_newPasswordTXTFocusGained

    private void newPasswordTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPasswordTXTFocusLost
        
        checkPassword(commitable, String.valueOf(newPasswordTXT.getPassword()), newPasswordErrLabel);

    }//GEN-LAST:event_newPasswordTXTFocusLost

    private void verifyNewPasswordTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_verifyNewPasswordTXTFocusGained
        
        if (commitable) {
            newPasswordErrLabel.setVisible(false);
        }
    }//GEN-LAST:event_verifyNewPasswordTXTFocusGained

    private void verifyNewPasswordTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_verifyNewPasswordTXTFocusLost
        
        if (!String.valueOf(verifyNewPasswordTXT.getPassword()).equals(String.valueOf(newPasswordTXT.getPassword()))) {
            commitable = false;
            newPasswordErrLabel.setText("passwords do not match");
            newPasswordErrLabel.setVisible(true);
        }
    }//GEN-LAST:event_verifyNewPasswordTXTFocusLost

    private void forgottenPasswordLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgottenPasswordLabelMouseClicked
        try {
            
            URLConnection con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");
            OutputStream os = con.getOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(os);
            HashMap<String,String> param = new HashMap<String, String>();

            param.put("action", "resetPassword");

            oos.writeObject(param);
            oos.flush();
            oos.close();

            InputStream is = con.getInputStream();
            ObjectInputStream ois = new ObjectInputStream(is);

            int err_code = (Integer)ois.readObject();

            if (err_code == 0) {
                emailSuccessLabel.setText("Ok, I've sent the instructions to your email.");
                emailSuccessLabel.setVisible(true);
            }
            

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_forgottenPasswordLabelMouseClicked

    private void forgottenPasswordLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgottenPasswordLabelMouseEntered
        
        changePasswordDialog.setCursor(new Cursor(Cursor.HAND_CURSOR));

    }//GEN-LAST:event_forgottenPasswordLabelMouseEntered

    private void forgottenPasswordLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgottenPasswordLabelMouseExited
        
        changePasswordDialog.setCursor(Cursor.getDefaultCursor());
        
    }//GEN-LAST:event_forgottenPasswordLabelMouseExited

    private void profileConfirmBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileConfirmBTNActionPerformed
        
        commitable = false;

        if (!profileFirstNameTXT.getText().equals(firstNameDetail.getText())
                || profileLastNameTXT.getText().equals(lastNameDetail.getText())
                || profileEmailTXT.getText().equals(emailDetailLabel.getText())
                || userSex != profileSexBOX.getSelectedIndex()
                || userBirthDay_Year != profileYearBOX.getSelectedIndex()
                || userBirthDay_Month != profileMonthBOX.getSelectedIndex()
                || userBirthDay_Day != profileDayBOX.getSelectedIndex()) {

            commitable = true;
            checkFirstName();
            checkLastName();
            checkEmail();
            checkBirthday(profileYearBOX, yearStar);
            checkBirthday(profileMonthBOX, monthStar);
            checkBirthday(profileDayBOX, dayStar);
            checkSex();
            profileErrMsg.setVisible(false);

        }
        else{
            profileErrMsg.setText("no change");
            profileErrMsg.setVisible(true);
        }

        if (commitable) {
            try {
                URLConnection con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");
                OutputStream os = con.getOutputStream();
                ObjectOutputStream oos = new ObjectOutputStream(os);

                HashMap<String, String> param = new HashMap<String, String>();

                param.put("firstName", profileFirstNameTXT.getText());
                param.put("lastName", profileLastNameTXT.getText());
                param.put("email", profileEmailTXT.getText());
                param.put("sex", profileSexBOX.getSelectedIndex() + "");
                param.put("year", profileYearBOX.getSelectedIndex() + "");
                param.put("month", profileMonthBOX.getSelectedIndex() + "");
                param.put("day", profileDayBOX.getSelectedIndex() + "");
                param.put("action", "updateUser");

                oos.writeObject(param);
                oos.flush();
                oos.close();

                InputStream is = con.getInputStream();
                ObjectInputStream ois = new ObjectInputStream(is);

                int err_code = (Integer) ois.readObject();
                if (err_code == 0) {
                    fetchUserDetail();
                    editProfileDialog.dispose();
                }


            } catch (ClassNotFoundException ex) {
                Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
            }

            
        }

        
    }//GEN-LAST:event_profileConfirmBTNActionPerformed

    private void profileFirstNameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileFirstNameTXTFocusGained
        
        firstNameErrLabel.setVisible(false);
    }//GEN-LAST:event_profileFirstNameTXTFocusGained

    private void checkFirstName() {
        String firstName = profileFirstNameTXT.getText();

        if (firstName.length() == 0) {
            firstNameErrLabel.setVisible(true);
            firstNameErrLabel.setText("Required field cannot be left blank");
            commitable = false;
        }

        log.info("check FirstName");
    }

    private void profileFirstNameTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileFirstNameTXTFocusLost
        
        checkFirstName();
    }//GEN-LAST:event_profileFirstNameTXTFocusLost

    private void profileLastNameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileLastNameTXTFocusGained
        
        lastNameErrLabel.setVisible(false);
    }//GEN-LAST:event_profileLastNameTXTFocusGained
    private void checkLastName() {
        String lastName = profileLastNameTXT.getText();

        if (lastName.length() == 0) {
            lastNameErrLabel.setVisible(true);
            lastNameErrLabel.setText("Required field cannot be left blank");
            commitable = false;
        }

        log.info("check Lastname");
    }

    private void profileLastNameTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileLastNameTXTFocusLost
        
        checkLastName();
    }//GEN-LAST:event_profileLastNameTXTFocusLost

    private void profileEmailTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileEmailTXTFocusGained
        
        emailErrLabel.setVisible(false);
    }//GEN-LAST:event_profileEmailTXTFocusGained

     private void checkEmail() {
        String email = profileEmailTXT.getText();

        if (email.length() == 0) {
            emailErrLabel.setVisible(true);
            emailErrLabel.setText("Required field cannot be left blank");
            commitable = false;
        } else if (email.length() > 0) {
            String emailCheck = "\\w+(\\.\\w+)*@\\w+(\\.\\w+)+";

            Pattern regex = Pattern.compile(emailCheck);
            Matcher matcher = regex.matcher(email);
            if (!matcher.matches()) {
                emailErrLabel.setVisible(true);
                emailErrLabel.setText("Please enter a valid email address");
                commitable = false;
            }
        }

        log.info("check email address");
    }

    private void profileEmailTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileEmailTXTFocusLost
        
        checkEmail();
    }//GEN-LAST:event_profileEmailTXTFocusLost

    private void profileSexBOXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileSexBOXFocusGained
        
        sexStar.setVisible(false);
    }//GEN-LAST:event_profileSexBOXFocusGained

     private void checkSex(){
        if (profileSexBOX.getSelectedIndex() == 0) {
            sexStar.setVisible(true);
            log.info("Please select either Male or Female.");
            commitable = false;
        }

        log.info("check sex choose");
    }
    private void profileSexBOXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileSexBOXFocusLost
        
        checkSex();
    }//GEN-LAST:event_profileSexBOXFocusLost

    private void profileYearBOXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileYearBOXFocusGained
        
        yearStar.setVisible(false);
    }//GEN-LAST:event_profileYearBOXFocusGained
    private void cacasdeCal(){
        if (profileMonthBOX.getSelectedIndex() == 2) {
            if (profileYearBOX.getSelectedIndex() % 4 == 0) {
                if (profileDayBOX.getSelectedIndex() > 29) {
                    profileDayBOX.setSelectedIndex(0);
                }
                if (profileDayBOX.getItemCount() > 30) {
                    for(int i=30; i < profileDayBOX.getItemCount(); i++) {
                        profileDayBOX.removeItemAt(i);
                    }
                }
                else if(profileDayBOX.getItemCount() < 30){
                    for(int i = profileDayBOX.getItemCount(); i <= 29; i++){
                        profileDayBOX.addItem(i);
                    }
                }
                log.info("February with 29 days");
            }
            else {
                if (profileDayBOX.getSelectedIndex() > 28 ) {
                    profileDayBOX.setSelectedIndex(0);
                }
                if (profileDayBOX.getItemCount() > 29) {
                    for(int i=29; i < profileDayBOX.getItemCount(); i++) {
                        profileDayBOX.removeItemAt(i);
                    }
                }
                log.info("February with 28 days");
            }
        }
        else if(profileMonthBOX.getSelectedIndex() > 0 &&
                monthWith_31_Days[profileMonthBOX.getSelectedIndex()-1] != 0 ){

            if (profileDayBOX.getItemCount() < 32) {
                for(int i = profileDayBOX.getItemCount(); i <= 31; i++){
                    profileDayBOX.addItem(i);
                }
            }

            log.info("month with 31 days");
        }
        else if(profileMonthBOX.getSelectedIndex() > 0 &&
                monthWith_31_Days[profileMonthBOX.getSelectedIndex()-1] == 0){
            if (profileDayBOX.getSelectedIndex() > 30) {
                profileDayBOX.setSelectedIndex(0);
            }
            if (profileDayBOX.getItemCount() < 31) {
                for(int i = profileDayBOX.getItemCount(); i <= 31; i++){
                    profileDayBOX.addItem(i);
                }
            }
            else if(profileDayBOX.getItemCount() > 31){
                profileDayBOX.removeItemAt(31);
            }

            log.info("month with 30 days");

        }
        log.info("cacasde calendar check");
    }
    private void  checkBirthday(JComboBox input,JLabel msg){
        if (profileYearBOX.getSelectedIndex() == 0) {
            msg.setVisible(true);
            commitable = false;
        }
    }
    
    private void profileYearBOXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileYearBOXFocusLost
        cacasdeCal();
        checkBirthday(profileYearBOX, yearStar);
        checkBirthday(profileMonthBOX, monthStar);
        checkBirthday(profileDayBOX, dayStar);
    }//GEN-LAST:event_profileYearBOXFocusLost

    private void profileMonthBOXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileMonthBOXFocusGained
        
        monthStar.setVisible(false);
    }//GEN-LAST:event_profileMonthBOXFocusGained

    private void profileMonthBOXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileMonthBOXFocusLost
        cacasdeCal();
        checkBirthday(profileYearBOX, yearStar);
        checkBirthday(profileMonthBOX, monthStar);
        checkBirthday(profileDayBOX, dayStar);
    }//GEN-LAST:event_profileMonthBOXFocusLost

    private void profileDayBOXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileDayBOXFocusGained
        
        dayStar.setVisible(false);
    }//GEN-LAST:event_profileDayBOXFocusGained

    private void profileDayBOXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_profileDayBOXFocusLost
        
        checkBirthday(profileYearBOX, yearStar);
        checkBirthday(profileMonthBOX, monthStar);
        checkBirthday(profileDayBOX, dayStar);
    }//GEN-LAST:event_profileDayBOXFocusLost

    private void changePasswordDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_changePasswordDialogWindowClosing
        currentPasswordTXT.setText("");
        newPasswordTXT.setText("");
        verifyNewPasswordTXT.setText("");
    }//GEN-LAST:event_changePasswordDialogWindowClosing

    private void editProfileDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_editProfileDialogWindowOpened

        profileErrMsg.setVisible(false);
    }//GEN-LAST:event_editProfileDialogWindowOpened

    private void profileYearBOXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_profileYearBOXItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cacasdeCal();
        }
    }//GEN-LAST:event_profileYearBOXItemStateChanged

    private void profileMonthBOXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_profileMonthBOXItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            cacasdeCal();
        }
    }//GEN-LAST:event_profileMonthBOXItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AccountList;
    private javax.swing.JLabel BirthdayLabel;
    private javax.swing.JComboBox accountCombox;
    private javax.swing.JLabel accountManagerLink;
    private javax.swing.JLabel birthdayDetailLabel;
    private javax.swing.JButton cancelChangeBTN;
    private javax.swing.JDialog changePasswordDialog;
    private javax.swing.JLabel changePasswordLink;
    private javax.swing.JButton confirmChangeBTN;
    private javax.swing.JLabel curPasswordErrLabel;
    private javax.swing.JLabel currentPasswordLabel;
    private javax.swing.JPasswordField currentPasswordTXT;
    private javax.swing.JLabel dayStar;
    private javax.swing.JLabel dialogFormName;
    private javax.swing.JLabel dialogFormNameLabel;
    private javax.swing.JLabel dialogLogoLabel;
    private javax.swing.JLabel dialogLogoName;
    private javax.swing.JDialog editProfileDialog;
    private javax.swing.JLabel editProfileLink;
    private javax.swing.JLabel emailDetailLabel;
    private javax.swing.JLabel emailErrLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel emailSuccessLabel;
    private javax.swing.JLabel firstNameDetail;
    private javax.swing.JLabel firstNameErrLabel;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel forgottenPasswordLabel;
    private javax.swing.JLabel formNameLabel;
    private javax.swing.JLabel hintLabel;
    private javax.swing.JLabel lastNameDetail;
    private javax.swing.JLabel lastNameErrLabel;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel linkAddress;
    private javax.swing.JLabel linkTextLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel monthStar;
    private javax.swing.JLabel msgLabel;
    private javax.swing.JDialog msgbox;
    private javax.swing.JLabel newPasswordErrLabel;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JPasswordField newPasswordTXT;
    private javax.swing.JLabel openAccountLink;
    private javax.swing.JLabel passwordDetailLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel profileBirthdayLabel;
    private javax.swing.JButton profileCancelBTN;
    private javax.swing.JButton profileConfirmBTN;
    private javax.swing.JComboBox profileDayBOX;
    private javax.swing.JLabel profileEmailLabel;
    private javax.swing.JTextField profileEmailTXT;
    private javax.swing.JLabel profileErrMsg;
    private javax.swing.JTextField profileFirstNameTXT;
    private javax.swing.JLabel profileFirstnameLabel;
    private javax.swing.JLabel profileLastNameLabel;
    private javax.swing.JTextField profileLastNameTXT;
    private javax.swing.JComboBox profileMonthBOX;
    private javax.swing.JComboBox profileSexBOX;
    private javax.swing.JLabel profileSexLabel;
    private javax.swing.JComboBox profileYearBOX;
    private javax.swing.JLabel sexStar;
    private javax.swing.JLabel signoutLinkLabel;
    private javax.swing.JPanel userDetailPanel;
    private javax.swing.JLabel usernameDetaiLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel verifyNewPasswordLabel;
    private javax.swing.JPasswordField verifyNewPasswordTXT;
    private javax.swing.JLabel yearStar;
    // End of variables declaration//GEN-END:variables

}
