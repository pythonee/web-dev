/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpenAccountApplet.java
 *
 * Created on 12-Dec-2010, 03:22:55
 */

package user;

import java.applet.AppletContext;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JLabel;

/**
 *
 * @author pythonee
 */
public class OpenAccountApplet extends javax.swing.JApplet {
    final static Logger log = Logger.getLogger("OpenAccountApplet");
    boolean commitable = true;

    /** Initializes the applet OpenAccountApplet */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            log.severe(ex.getMessage());
        }

        setSize(765, 608);
        openAccountPanel.setSize(740, 500);
        usernameLink.setHorizontalAlignment(JLabel.RIGHT);
        errMsgBox.setSize(400, 208);
        successMsgBox.setSize(400, 258);

        pinNumberTXT.enableInputMethods(true);
        rePinNumberTXT.enableInputMethods(true);

        cardNumberErrLabel.setVisible(false);
        typeChooseErrLabel.setVisible(false);
        pinNumberErrLabel.setVisible(false);
        accountTitleErrLabel.setVisible(false);

        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screen = tk.getScreenSize();
        int width = screen.width;
        int height = screen.height;

        int errDlgWidth = errMsgBox.getWidth();
        int errDlgHeight = errMsgBox.getHeight();

        errMsgBox.setLocation((width-errDlgWidth)/2, (height-errDlgHeight)/2);

        errMsgBox.setVisible(false);

        int successDlgWidth = successMsgBox.getWidth();
        int successDlgHeight = successMsgBox.getHeight();

        successMsgBox.setLocation((width - successDlgWidth)/2, (height-successDlgHeight)/2);
        successMsgBox.setVisible(false);

        linkAddressLabel.setVisible(false);
    }

    @Override
    public void start() {
        fetchUserDetail();
    }

    @Override
    public void stop() {
        errMsgBox.dispose();
        successMsgBox.dispose();
    }




    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        errMsgBox = new javax.swing.JDialog();
        errMsgLabel = new javax.swing.JLabel();
        hint_label = new javax.swing.JLabel();
        linkTextLabel = new javax.swing.JLabel();
        linkAddressLabel = new javax.swing.JLabel();
        successMsgBox = new javax.swing.JDialog();
        successLabel = new javax.swing.JLabel();
        linkChoose = new javax.swing.JLabel();
        continueLink = new javax.swing.JLabel();
        showAccountLink = new javax.swing.JLabel();
        openAccountPanel = new javax.swing.JPanel();
        typeBOX = new javax.swing.JComboBox();
        accountTitleTXT = new javax.swing.JTextField();
        typeLabel = new javax.swing.JLabel();
        accountTitleLabel = new javax.swing.JLabel();
        resetBTN = new javax.swing.JButton();
        confirmBTN = new javax.swing.JButton();
        cardNumberLabel = new javax.swing.JLabel();
        cardNumberTXT = new javax.swing.JTextField();
        pinNumberLabel = new javax.swing.JLabel();
        pinNumberTXT = new javax.swing.JPasswordField();
        rePinNumberLabel = new javax.swing.JLabel();
        rePinNumberTXT = new javax.swing.JPasswordField();
        cardNumberErrLabel = new javax.swing.JLabel();
        typeChooseErrLabel = new javax.swing.JLabel();
        pinNumberErrLabel = new javax.swing.JLabel();
        accountTitleErrLabel = new javax.swing.JLabel();
        cardNumberEX = new javax.swing.JLabel();
        pinNumberEX = new javax.swing.JLabel();
        formNameLabel = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();
        usernameLink = new javax.swing.JLabel();

        errMsgBox.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        errMsgBox.setTitle("Error");
        errMsgBox.setIconImage(null);
        errMsgBox.setIconImages(null);
        errMsgBox.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                errMsgBoxWindowClosing(evt);
            }
        });

        errMsgLabel.setForeground(new java.awt.Color(255, 0, 0));
        errMsgLabel.setText("err_msg");

        hint_label.setText("You can click link below to solve this problem:");

        linkTextLabel.setForeground(new java.awt.Color(0, 0, 255));
        linkTextLabel.setText("link text");
        linkTextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linkTextLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                linkTextLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                linkTextLabelMouseExited(evt);
            }
        });

        linkAddressLabel.setText("link_address");

        javax.swing.GroupLayout errMsgBoxLayout = new javax.swing.GroupLayout(errMsgBox.getContentPane());
        errMsgBox.getContentPane().setLayout(errMsgBoxLayout);
        errMsgBoxLayout.setHorizontalGroup(
            errMsgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errMsgBoxLayout.createSequentialGroup()
                .addGroup(errMsgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(errMsgBoxLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(errMsgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(linkTextLabel)
                            .addComponent(hint_label)
                            .addComponent(errMsgLabel)))
                    .addGroup(errMsgBoxLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(linkAddressLabel)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        errMsgBoxLayout.setVerticalGroup(
            errMsgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errMsgBoxLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(errMsgLabel)
                .addGap(18, 18, 18)
                .addComponent(hint_label)
                .addGap(18, 18, 18)
                .addComponent(linkTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(linkAddressLabel)
                .addContainerGap())
        );

        successMsgBox.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        successMsgBox.setTitle("Open Account Success");
        successMsgBox.setIconImage(null);
        successMsgBox.setIconImages(null);
        successMsgBox.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                successMsgBoxWindowClosing(evt);
            }
        });

        successLabel.setText("Open Account Success");

        linkChoose.setText("Now you can go:");

        continueLink.setForeground(new java.awt.Color(0, 0, 255));
        continueLink.setText("continue to add another account");
        continueLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                continueLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                continueLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                continueLinkMouseExited(evt);
            }
        });

        showAccountLink.setForeground(new java.awt.Color(0, 0, 255));
        showAccountLink.setText("show me this account detail");
        showAccountLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showAccountLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                showAccountLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                showAccountLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout successMsgBoxLayout = new javax.swing.GroupLayout(successMsgBox.getContentPane());
        successMsgBox.getContentPane().setLayout(successMsgBoxLayout);
        successMsgBoxLayout.setHorizontalGroup(
            successMsgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(successMsgBoxLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(successMsgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showAccountLink)
                    .addComponent(continueLink)
                    .addComponent(linkChoose)
                    .addComponent(successLabel))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        successMsgBoxLayout.setVerticalGroup(
            successMsgBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(successMsgBoxLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(successLabel)
                .addGap(18, 18, 18)
                .addComponent(linkChoose)
                .addGap(38, 38, 38)
                .addComponent(continueLink)
                .addGap(18, 18, 18)
                .addComponent(showAccountLink)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        openAccountPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Open an Account"));
        openAccountPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        typeBOX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Type", "Debit", "Credit" }));
        typeBOX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                typeBOXFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                typeBOXFocusLost(evt);
            }
        });
        openAccountPanel.add(typeBOX, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 110, -1, -1));

        accountTitleTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                accountTitleTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                accountTitleTXTFocusLost(evt);
            }
        });
        openAccountPanel.add(accountTitleTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 330, 242, -1));

        typeLabel.setText("Type of Card:");
        openAccountPanel.add(typeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 115, -1, -1));

        accountTitleLabel.setText("Account Title:");
        openAccountPanel.add(accountTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 330, -1, -1));

        resetBTN.setText("Reset");
        resetBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBTNActionPerformed(evt);
            }
        });
        openAccountPanel.add(resetBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 420, 93, -1));

        confirmBTN.setText("Confirm");
        confirmBTN.setPreferredSize(new java.awt.Dimension(56, 30));
        confirmBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBTNActionPerformed(evt);
            }
        });
        openAccountPanel.add(confirmBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(354, 420, 93, -1));

        cardNumberLabel.setText("Card Number:");
        openAccountPanel.add(cardNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 38, -1, -1));

        cardNumberTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cardNumberTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cardNumberTXTFocusLost(evt);
            }
        });
        openAccountPanel.add(cardNumberTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 33, 243, -1));

        pinNumberLabel.setText("Pin Number:");
        openAccountPanel.add(pinNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 201, -1, -1));

        pinNumberTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pinNumberTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pinNumberTXTFocusLost(evt);
            }
        });
        openAccountPanel.add(pinNumberTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 196, 242, -1));

        rePinNumberLabel.setText("Re-Enter Pin Number:");
        openAccountPanel.add(rePinNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 266, -1, -1));

        rePinNumberTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rePinNumberTXTFocusLost(evt);
            }
        });
        openAccountPanel.add(rePinNumberTXT, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 266, 242, -1));

        cardNumberErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        cardNumberErrLabel.setText("card number err");
        openAccountPanel.add(cardNumberErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 67, -1, -1));

        typeChooseErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        typeChooseErrLabel.setText("kind choose err");
        openAccountPanel.add(typeChooseErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 143, -1, -1));

        pinNumberErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        pinNumberErrLabel.setText("pin number err");
        openAccountPanel.add(pinNumberErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 230, -1, -1));

        accountTitleErrLabel.setForeground(new java.awt.Color(255, 0, 0));
        accountTitleErrLabel.setText("account title");
        openAccountPanel.add(accountTitleErrLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 364, -1, -1));

        cardNumberEX.setText("ex:1234567");
        openAccountPanel.add(cardNumberEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 38, -1, -1));

        pinNumberEX.setText("ex:1234");
        openAccountPanel.add(pinNumberEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 201, -1, -1));

        getContentPane().add(openAccountPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 100, 750, 510));

        formNameLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        formNameLabel.setText("Open Account");
        getContentPane().add(formNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 21, -1, -1));

        logoLabel.setFont(new java.awt.Font("WenQuanYi Micro Hei", 0, 18));
        logoLabel.setText("E-Banking");
        getContentPane().add(logoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(663, 21, -1, -1));

        usernameLink.setForeground(new java.awt.Color(0, 0, 255));
        usernameLink.setText("username");
        usernameLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usernameLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                usernameLinkMouseExited(evt);
            }
        });
        getContentPane().add(usernameLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 76, 144, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void fetchUserDetail(){
        
        URLConnection con = null;
        try {
            con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/user");
        } catch (Exception ex) {
            log.severe(ex.getMessage());
        }

        if (con != null) {
            try {
                OutputStream os = con.getOutputStream();
                ObjectOutputStream oos = new ObjectOutputStream(os);

                HashMap<String,String> param = new HashMap<String, String>();
                param.put("action", "fetchUserDetail");

                oos.writeObject(param);
                oos.flush();
                oos.close();

                InputStream is = con.getInputStream();
                ObjectInputStream ois = new ObjectInputStream(is);
                HashMap<String, String> user = (HashMap<String, String>) ois.readObject();

                if (user == null) {
                    openAccountPanel.setVisible(false);
                    usernameLink.setVisible(false);
                    errMsgLabel.setText("You have not login");
                    linkTextLabel.setText("user login form page");
                    linkAddressLabel.setText("login.jsp");
                    errMsgBox.setVisible(true);
                    log.info("not login yet");
                } else {
                    openAccountPanel.setVisible(true);
                    usernameLink.setText(user.get("username"));
                    usernameLink.setVisible(true);
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(UserCenterApplet.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        log.info("fetch user detail");
    }

    private void checkCardNumber() {
        if (cardNumberTXT.getText().length() == 0) {
            commitable = false;
            cardNumberErrLabel.setText("Required field cannot be left blank");
            cardNumberErrLabel.setVisible(true);
        } 
        else {
            String regex = "\\d+";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(cardNumberTXT.getText());
            if (!matcher.matches()) {
                commitable = false;
                cardNumberErrLabel.setText("only numbers [0-9] are allowed");
                cardNumberErrLabel.setVisible(true);
            } 
            else if (cardNumberTXT.getText().length() != 7) {
                commitable = false;
                cardNumberErrLabel.setText("please input 7-digit card number");
                cardNumberErrLabel.setVisible(true);
            }
        }
    }

    private void checkTypeChoose(){
        if (typeBOX.getSelectedIndex() == 0) {
            commitable = false;
            typeChooseErrLabel.setText("please choose your card type");
            typeChooseErrLabel.setVisible(true);
        }
    }

    private void checkPinNumber(){
        if (pinNumberTXT.getPassword().length == 0 || pinNumberTXT.getPassword().length != 4) {
            commitable = false;
            pinNumberErrLabel.setText("please input 4-digit pin code");
            pinNumberErrLabel.setVisible(true);
        }
        else{
            String regex = "\\d+";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(cardNumberTXT.getText());

            if (!matcher.matches()) {
                commitable = false;
                pinNumberErrLabel.setText("only numbers [0-9] are allowed");
                pinNumberErrLabel.setVisible(true);
            }
        }
    }

    private void checkRePinNumber(){
        String pinNumber = String.valueOf(pinNumberTXT.getPassword());
        String rePinNumber = String.valueOf(rePinNumberTXT.getPassword());
        
        if (!pinNumber.equals(rePinNumber)) {
            commitable = false;
            pinNumberErrLabel.setText("pin number don't match");
            pinNumberErrLabel.setVisible(true);
        }
    }

    private void checkAccountTitle(){
        if (accountTitleTXT.getText().length() == 0) {
            commitable = false;
            accountTitleErrLabel.setText("Required field cannot be left blank");
            accountTitleErrLabel.setVisible(true);
        }
        else{
            String regex = "\\w+";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(cardNumberTXT.getText());

            if (!matcher.matches()) {
                commitable = false;
                accountTitleErrLabel.setText("Sorry, only letters (a-z), numbers (0-9), and underline (_) are allowed");
                accountTitleErrLabel.setVisible(true);
            }
        }
    }

    private void usernameLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameLinkMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "ucenter.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to ucenter.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_usernameLinkMouseClicked

    private void usernameLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameLinkMouseEntered
        
        this.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_usernameLinkMouseEntered

    private void usernameLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameLinkMouseExited
        
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_usernameLinkMouseExited

    private void cardNumberTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cardNumberTXTFocusLost
        
        checkCardNumber();
    }//GEN-LAST:event_cardNumberTXTFocusLost

    private void typeBOXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typeBOXFocusLost
        
        checkTypeChoose();
    }//GEN-LAST:event_typeBOXFocusLost

    private void pinNumberTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pinNumberTXTFocusLost
        
        checkPinNumber();
    }//GEN-LAST:event_pinNumberTXTFocusLost

    private void rePinNumberTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rePinNumberTXTFocusLost
        
        checkRePinNumber();
    }//GEN-LAST:event_rePinNumberTXTFocusLost

    private void accountTitleTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accountTitleTXTFocusLost
        
        checkAccountTitle();
    }//GEN-LAST:event_accountTitleTXTFocusLost

    private void confirmBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBTNActionPerformed
        
        commitable = true;
        checkCardNumber();
        checkTypeChoose();
        checkPinNumber();
        checkRePinNumber();
        checkAccountTitle();

        if (commitable) {
            try {
                URLConnection con = ConnectManager.getConnection(getCodeBase(), "/ebank/service/account");

                OutputStream os = con.getOutputStream();
                ObjectOutputStream oos  = new ObjectOutputStream(os);

                HashMap<String,String> param = new HashMap<String, String>();
                param.put("cardNumber", cardNumberTXT.getText());
                param.put("cardType", String.valueOf(typeBOX.getSelectedIndex()-1));
                param.put("pinCode", String.valueOf(pinNumberTXT.getPassword()));
                param.put("accountTitle", accountTitleTXT.getText());
                param.put("action", "addAccount");
                oos.writeObject(param);
                oos.flush();
                oos.close();

                InputStream is = con.getInputStream();
                ObjectInputStream ois = new ObjectInputStream(is);

                int err_code = (Integer)ois.readObject();

                switch(err_code){

                    case 0:
                        successMsgBox.setVisible(true);
                        log.info("success");
                        break;

                    case 1:
                        accountTitleErrLabel.setText("title is existed");
                        accountTitleErrLabel.setVisible(true);
                        log.info("error");
                        break;

                    case 2:
                        cardNumberErrLabel.setText("this card have bound to your account");
                        cardNumberErrLabel.setVisible(true);
                        log.info("error");
                        break;
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(OpenAccountApplet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(OpenAccountApplet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(OpenAccountApplet.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_confirmBTNActionPerformed

    private void resetBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBTNActionPerformed
        
        cardNumberTXT.setText("");
        typeBOX.setSelectedIndex(0);
        pinNumberTXT.setText("");
        rePinNumberTXT.setText("");
        accountTitleTXT.setText("");
    }//GEN-LAST:event_resetBTNActionPerformed

    private void errMsgBoxWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_errMsgBoxWindowClosing
        
        errMsgBox.dispose();
    }//GEN-LAST:event_errMsgBoxWindowClosing

    private void successMsgBoxWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_successMsgBoxWindowClosing
        
        successMsgBox.dispose();
    }//GEN-LAST:event_successMsgBoxWindowClosing

    private void cardNumberTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cardNumberTXTFocusGained
        
        cardNumberErrLabel.setVisible(false);
    }//GEN-LAST:event_cardNumberTXTFocusGained

    private void typeBOXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typeBOXFocusGained
        
        typeChooseErrLabel.setVisible(false);
    }//GEN-LAST:event_typeBOXFocusGained

    private void pinNumberTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pinNumberTXTFocusGained
        
        pinNumberErrLabel.setVisible(false);
    }//GEN-LAST:event_pinNumberTXTFocusGained

    private void accountTitleTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accountTitleTXTFocusGained
        
        accountTitleErrLabel.setVisible(false);
    }//GEN-LAST:event_accountTitleTXTFocusGained

    private void continueLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continueLinkMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "open.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to open.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_continueLinkMouseClicked

    private void showAccountLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showAccountLinkMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + "account.jsp");
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.info("link jump to account.jsp");
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }
    }//GEN-LAST:event_showAccountLinkMouseClicked

    private void continueLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continueLinkMouseEntered
        
        successMsgBox.setCursor(new Cursor(Cursor.HAND_CURSOR));

    }//GEN-LAST:event_continueLinkMouseEntered

    private void continueLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continueLinkMouseExited
        
        successMsgBox.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_continueLinkMouseExited

    private void showAccountLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showAccountLinkMouseEntered
        
        successMsgBox.setCursor(new Cursor(Cursor.HAND_CURSOR));

    }//GEN-LAST:event_showAccountLinkMouseEntered

    private void showAccountLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showAccountLinkMouseExited
        
        successMsgBox.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_showAccountLinkMouseExited

    private void linkTextLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkTextLabelMouseClicked
        
        try {
            URL url = new URL(getCodeBase().toString() + linkAddressLabel.getText());
            AppletContext ac = this.getAppletContext();
            ac.showDocument(url);
            log.log(Level.INFO, "link jump to {0}", linkAddressLabel.getText());
        } catch (MalformedURLException e) {
            log.severe(e.getMessage());
        }

    }//GEN-LAST:event_linkTextLabelMouseClicked

    private void linkTextLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkTextLabelMouseEntered
        
        errMsgBox.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_linkTextLabelMouseEntered

    private void linkTextLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkTextLabelMouseExited
        
        errMsgBox.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_linkTextLabelMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountTitleErrLabel;
    private javax.swing.JLabel accountTitleLabel;
    private javax.swing.JTextField accountTitleTXT;
    private javax.swing.JLabel cardNumberEX;
    private javax.swing.JLabel cardNumberErrLabel;
    private javax.swing.JLabel cardNumberLabel;
    private javax.swing.JTextField cardNumberTXT;
    private javax.swing.JButton confirmBTN;
    private javax.swing.JLabel continueLink;
    private javax.swing.JDialog errMsgBox;
    private javax.swing.JLabel errMsgLabel;
    private javax.swing.JLabel formNameLabel;
    private javax.swing.JLabel hint_label;
    private javax.swing.JLabel linkAddressLabel;
    private javax.swing.JLabel linkChoose;
    private javax.swing.JLabel linkTextLabel;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel openAccountPanel;
    private javax.swing.JLabel pinNumberEX;
    private javax.swing.JLabel pinNumberErrLabel;
    private javax.swing.JLabel pinNumberLabel;
    private javax.swing.JPasswordField pinNumberTXT;
    private javax.swing.JLabel rePinNumberLabel;
    private javax.swing.JPasswordField rePinNumberTXT;
    private javax.swing.JButton resetBTN;
    private javax.swing.JLabel showAccountLink;
    private javax.swing.JLabel successLabel;
    private javax.swing.JDialog successMsgBox;
    private javax.swing.JComboBox typeBOX;
    private javax.swing.JLabel typeChooseErrLabel;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JLabel usernameLink;
    // End of variables declaration//GEN-END:variables

}
